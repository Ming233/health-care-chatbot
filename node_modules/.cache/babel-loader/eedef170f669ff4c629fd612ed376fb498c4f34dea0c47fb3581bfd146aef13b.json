{"ast":null,"code":"var normalize = function (x) {\n  return Math.max(x, 0);\n};\n/**\n * @hidden\n */\nvar ScrollAction = /** @class */function () {\n  function ScrollAction(offset) {\n    this.offset = offset;\n  }\n  return ScrollAction;\n}();\nexport { ScrollAction };\n/**\n * @hidden\n */\nvar PageAction = /** @class */function () {\n  function PageAction(skip) {\n    this.skip = skip;\n  }\n  return PageAction;\n}();\nexport { PageAction };\n/**\n * @hidden\n */\nvar ScrollerService = /** @class */function () {\n  function ScrollerService(onScrollAction, onPageAction) {\n    this.onScrollAction = onScrollAction;\n    this.onPageAction = onPageAction;\n    this.direction = 'vertical';\n    this.firstLoaded = 0;\n    this.lastLoaded = 0;\n    this.lastScrollTop = 0;\n    this.take = 0;\n    this.total = 0;\n    this.rowHeightService = null;\n    this.bottomOffset = 0;\n    this.topOffset = 0;\n  }\n  ScrollerService.prototype.create = function (rowHeightService, skip, take, total, topOffset, bottomOffset, direction) {\n    if (topOffset === void 0) {\n      topOffset = 0;\n    }\n    if (bottomOffset === void 0) {\n      bottomOffset = 0;\n    }\n    if (direction === void 0) {\n      direction = 'vertical';\n    }\n    this.rowHeightService = rowHeightService;\n    this.firstLoaded = skip;\n    this.lastLoaded = skip + take;\n    this.take = take;\n    this.total = total;\n    this.lastScrollTop = 0;\n    this.topOffset = topOffset;\n    this.bottomOffset = bottomOffset;\n    this.direction = direction;\n    var offsetBufferRows = this.rowsForHeight(topOffset);\n    var skipWithOffset = normalize(skip - offsetBufferRows);\n    this.onScrollAction(new ScrollAction(this.rowOffset(skipWithOffset)));\n    this.onPageAction(new PageAction(skipWithOffset));\n  };\n  ScrollerService.prototype.onScroll = function (_a) {\n    var scrollLeft = _a.scrollLeft,\n      scrollTop = _a.scrollTop,\n      offsetHeight = _a.offsetHeight,\n      offsetWidth = _a.offsetWidth;\n    var scrollPosition = this.direction === 'vertical' ? scrollTop : scrollLeft;\n    var offsetSize = this.direction === 'vertical' ? offsetHeight : offsetWidth;\n    if (this.lastScrollTop === scrollPosition || !this.rowHeightService) {\n      return;\n    }\n    var up = this.lastScrollTop >= scrollPosition;\n    this.lastScrollTop = scrollPosition;\n    var firstItemIndex = this.rowHeightService.index(normalize(scrollPosition - this.topOffset));\n    var lastItemIndex = this.rowHeightService.index(normalize(scrollPosition + offsetSize - this.bottomOffset));\n    if (!up && lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n      this.firstLoaded = firstItemIndex;\n      this.onScrollAction(new ScrollAction(this.rowOffset(firstItemIndex)));\n      this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n      this.onPageAction(new PageAction(this.firstLoaded));\n    }\n    if (up && firstItemIndex <= this.firstLoaded) {\n      var nonVisibleBuffer = Math.floor(this.take * 0.3);\n      this.firstLoaded = normalize(firstItemIndex - nonVisibleBuffer);\n      this.onScrollAction(new ScrollAction(this.rowOffset(this.firstLoaded)));\n      this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n      this.onPageAction(new PageAction(this.firstLoaded));\n    }\n  };\n  ScrollerService.prototype.rowOffset = function (index) {\n    return this.rowHeightService ? this.rowHeightService.offset(index) + this.topOffset : 0;\n  };\n  ScrollerService.prototype.rowsForHeight = function (height) {\n    return this.rowHeightService ? Math.ceil(height / this.rowHeightService.height(0)) : 0;\n  };\n  return ScrollerService;\n}();\nexport { ScrollerService };","map":{"version":3,"names":["normalize","x","Math","max","ScrollAction","offset","PageAction","skip","ScrollerService","onScrollAction","onPageAction","direction","firstLoaded","lastLoaded","lastScrollTop","take","total","rowHeightService","bottomOffset","topOffset","prototype","create","offsetBufferRows","rowsForHeight","skipWithOffset","rowOffset","onScroll","_a","scrollLeft","scrollTop","offsetHeight","offsetWidth","scrollPosition","offsetSize","up","firstItemIndex","index","lastItemIndex","min","nonVisibleBuffer","floor","height","ceil"],"sources":["C:/Projects/health-care-chatbot/node_modules/@progress/kendo-react-dateinputs/dist/es/virtualization/services/ScrollerService.js"],"sourcesContent":["var normalize = function (x) { return Math.max(x, 0); };\n/**\n * @hidden\n */\nvar ScrollAction = /** @class */ (function () {\n    function ScrollAction(offset) {\n        this.offset = offset;\n    }\n    return ScrollAction;\n}());\nexport { ScrollAction };\n/**\n * @hidden\n */\nvar PageAction = /** @class */ (function () {\n    function PageAction(skip) {\n        this.skip = skip;\n    }\n    return PageAction;\n}());\nexport { PageAction };\n/**\n * @hidden\n */\nvar ScrollerService = /** @class */ (function () {\n    function ScrollerService(onScrollAction, onPageAction) {\n        this.onScrollAction = onScrollAction;\n        this.onPageAction = onPageAction;\n        this.direction = 'vertical';\n        this.firstLoaded = 0;\n        this.lastLoaded = 0;\n        this.lastScrollTop = 0;\n        this.take = 0;\n        this.total = 0;\n        this.rowHeightService = null;\n        this.bottomOffset = 0;\n        this.topOffset = 0;\n    }\n    ScrollerService.prototype.create = function (rowHeightService, skip, take, total, topOffset, bottomOffset, direction) {\n        if (topOffset === void 0) { topOffset = 0; }\n        if (bottomOffset === void 0) { bottomOffset = 0; }\n        if (direction === void 0) { direction = 'vertical'; }\n        this.rowHeightService = rowHeightService;\n        this.firstLoaded = skip;\n        this.lastLoaded = skip + take;\n        this.take = take;\n        this.total = total;\n        this.lastScrollTop = 0;\n        this.topOffset = topOffset;\n        this.bottomOffset = bottomOffset;\n        this.direction = direction;\n        var offsetBufferRows = this.rowsForHeight(topOffset);\n        var skipWithOffset = normalize(skip - offsetBufferRows);\n        this.onScrollAction(new ScrollAction(this.rowOffset(skipWithOffset)));\n        this.onPageAction(new PageAction(skipWithOffset));\n    };\n    ScrollerService.prototype.onScroll = function (_a) {\n        var scrollLeft = _a.scrollLeft, scrollTop = _a.scrollTop, offsetHeight = _a.offsetHeight, offsetWidth = _a.offsetWidth;\n        var scrollPosition = this.direction === 'vertical' ? scrollTop : scrollLeft;\n        var offsetSize = this.direction === 'vertical' ? offsetHeight : offsetWidth;\n        if (this.lastScrollTop === scrollPosition || !this.rowHeightService) {\n            return;\n        }\n        var up = this.lastScrollTop >= scrollPosition;\n        this.lastScrollTop = scrollPosition;\n        var firstItemIndex = this.rowHeightService.index(normalize(scrollPosition - this.topOffset));\n        var lastItemIndex = this.rowHeightService.index(normalize(scrollPosition + offsetSize - this.bottomOffset));\n        if (!up && lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n            this.firstLoaded = firstItemIndex;\n            this.onScrollAction(new ScrollAction(this.rowOffset(firstItemIndex)));\n            this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n            this.onPageAction(new PageAction(this.firstLoaded));\n        }\n        if (up && firstItemIndex <= this.firstLoaded) {\n            var nonVisibleBuffer = Math.floor(this.take * 0.3);\n            this.firstLoaded = normalize(firstItemIndex - nonVisibleBuffer);\n            this.onScrollAction(new ScrollAction(this.rowOffset(this.firstLoaded)));\n            this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n            this.onPageAction(new PageAction(this.firstLoaded));\n        }\n    };\n    ScrollerService.prototype.rowOffset = function (index) {\n        return this.rowHeightService ? this.rowHeightService.offset(index) + this.topOffset : 0;\n    };\n    ScrollerService.prototype.rowsForHeight = function (height) {\n        return this.rowHeightService ? Math.ceil(height / this.rowHeightService.height(0)) : 0;\n    };\n    return ScrollerService;\n}());\nexport { ScrollerService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}