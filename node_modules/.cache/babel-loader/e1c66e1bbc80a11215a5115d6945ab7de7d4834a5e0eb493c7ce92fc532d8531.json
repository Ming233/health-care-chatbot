{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar cancelDisassembler_1 = require(\"../disassemblers/cancelDisassembler\");\nvar httpContentStreamDisassembler_1 = require(\"../disassemblers/httpContentStreamDisassembler\");\nvar requestDisassembler_1 = require(\"../disassemblers/requestDisassembler\");\nvar responseDisassembler_1 = require(\"../disassemblers/responseDisassembler\");\nvar payloadTypes_1 = require(\"./payloadTypes\");\n/**\n * Send operations for streaming payloads.\n */\nvar SendOperations = /** @class */function () {\n  function SendOperations(payloadSender) {\n    this.payloadSender = payloadSender;\n  }\n  SendOperations.prototype.sendRequest = function (id, request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var disassembler;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            disassembler = new requestDisassembler_1.RequestDisassembler(this.payloadSender, id, request);\n            return [4 /*yield*/, disassembler.disassemble()];\n          case 1:\n            _a.sent();\n            if (request.streams) {\n              request.streams.forEach(function (contentStream) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4 /*yield*/, new httpContentStreamDisassembler_1.HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble()];\n                      case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              });\n            }\n\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SendOperations.prototype.sendResponse = function (id, response) {\n    return __awaiter(this, void 0, void 0, function () {\n      var disassembler;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            disassembler = new responseDisassembler_1.ResponseDisassembler(this.payloadSender, id, response);\n            return [4 /*yield*/, disassembler.disassemble()];\n          case 1:\n            _a.sent();\n            if (response.streams) {\n              response.streams.forEach(function (contentStream) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4 /*yield*/, new httpContentStreamDisassembler_1.HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble()];\n                      case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              });\n            }\n\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SendOperations.prototype.sendCancelStream = function (id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var disassembler;\n      return __generator(this, function (_a) {\n        disassembler = new cancelDisassembler_1.CancelDisassembler(this.payloadSender, id, payloadTypes_1.PayloadTypes.cancelStream);\n        disassembler.disassemble();\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  return SendOperations;\n}();\nexports.SendOperations = SendOperations;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;EAGI,wBAAmBA,aAA4B;IAC3C,IAAI,CAACA,aAAa,GAAGA,aAAa;EACtC;EAEaC,oCAAW,GAAxB,UAAyBC,EAAU,EAAEC,OAAyB;;;;;;;YACtDC,YAAY,GAAG,IAAIC,yCAAmB,CAAC,IAAI,CAACL,aAAa,EAAEE,EAAE,EAAEC,OAAO,CAAC;YAE3E,qBAAMC,YAAY,CAACE,WAAW,EAAE;;YAAhCC,SAAgC;YAEhC,IAAIJ,OAAO,CAACK,OAAO,EAAE;cACjBL,OAAO,CAACK,OAAO,CAACC,OAAO,CAAC,UAAOC,aAAa;gBAAA;;;;wBACxC,qBAAM,IAAIC,6DAA6B,CAAC,IAAI,CAACX,aAAa,EAAEU,aAAa,CAAC,CAACJ,WAAW,EAAE;;wBAAxFC,SAAwF;;;;;eAC3F,CAAC;;;;;;;GAET;;EAEYN,qCAAY,GAAzB,UAA0BC,EAAU,EAAEU,QAA2B;;;;;;;YACzDR,YAAY,GAAG,IAAIS,2CAAoB,CAAC,IAAI,CAACb,aAAa,EAAEE,EAAE,EAAEU,QAAQ,CAAC;YAE7E,qBAAMR,YAAY,CAACE,WAAW,EAAE;;YAAhCC,SAAgC;YAEhC,IAAIK,QAAQ,CAACJ,OAAO,EAAE;cAClBI,QAAQ,CAACJ,OAAO,CAACC,OAAO,CAAC,UAAOC,aAAa;gBAAA;;;;wBACzC,qBAAM,IAAIC,6DAA6B,CAAC,IAAI,CAACX,aAAa,EAAEU,aAAa,CAAC,CAACJ,WAAW,EAAE;;wBAAxFC,SAAwF;;;;;eAC3F,CAAC;;;;;;;GAET;;EAEYN,yCAAgB,GAA7B,UAA8BC,EAAU;;;;QAChCE,YAAY,GAAG,IAAIU,uCAAkB,CAAC,IAAI,CAACd,aAAa,EAAEE,EAAE,EAAEa,2BAAY,CAACC,YAAY,CAAC;QAC5FZ,YAAY,CAACE,WAAW,EAAE;;;;GAC7B;;EACL,qBAAC;AAAD,CAAC,EAnCD;AAAaW","names":["payloadSender","SendOperations","id","request","disassembler","requestDisassembler_1","disassemble","_a","streams","forEach","contentStream","httpContentStreamDisassembler_1","response","responseDisassembler_1","cancelDisassembler_1","payloadTypes_1","cancelStream","exports"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\botframework-streaming\\src\\payloads\\sendOperations.ts"],"sourcesContent":["/**\r\n * @module botframework-streaming\r\n */\r\n/**\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { PayloadSender } from '../payloadTransport/payloadSender';\r\nimport { StreamingRequest } from '../streamingRequest';\r\nimport { StreamingResponse } from '../streamingResponse';\r\nimport { CancelDisassembler } from '../disassemblers/cancelDisassembler';\r\nimport { HttpContentStreamDisassembler } from '../disassemblers/httpContentStreamDisassembler';\r\nimport { RequestDisassembler } from '../disassemblers/requestDisassembler';\r\nimport { ResponseDisassembler } from '../disassemblers/responseDisassembler';\r\nimport { PayloadTypes } from './payloadTypes';\r\n\r\n/**\r\n * Send operations for streaming payloads.\r\n */\r\nexport class SendOperations {\r\n    private readonly payloadSender: PayloadSender;\r\n\r\n    public constructor(payloadSender: PayloadSender) {\r\n        this.payloadSender = payloadSender;\r\n    }\r\n\r\n    public async sendRequest(id: string, request: StreamingRequest): Promise<void> {\r\n        let disassembler = new RequestDisassembler(this.payloadSender, id, request);\r\n\r\n        await disassembler.disassemble();\r\n\r\n        if (request.streams) {\r\n            request.streams.forEach(async (contentStream): Promise<void> => {\r\n                await new HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble();\r\n            });\r\n        }\r\n    }\r\n\r\n    public async sendResponse(id: string, response: StreamingResponse): Promise<void> {\r\n        let disassembler = new ResponseDisassembler(this.payloadSender, id, response);\r\n\r\n        await disassembler.disassemble();\r\n\r\n        if (response.streams) {\r\n            response.streams.forEach(async (contentStream): Promise<void> => {\r\n                await new HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble();\r\n            });\r\n        }\r\n    }\r\n\r\n    public async sendCancelStream(id: string): Promise<void> {\r\n        let disassembler = new CancelDisassembler(this.payloadSender, id, PayloadTypes.cancelStream);\r\n        disassembler.disassemble();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}