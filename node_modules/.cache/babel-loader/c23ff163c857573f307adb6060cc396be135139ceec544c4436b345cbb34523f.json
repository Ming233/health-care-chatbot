{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = dedupeFilenames;\nvar _parseFilename2 = _interopRequireDefault(require(\"./parseFilename\"));\nfunction dedupeFilenames(array) {\n  var nextArray = [];\n  array.forEach(function (value) {\n    var _parseFilename = (0, _parseFilename2[\"default\"])(value),\n      extname = _parseFilename.extname,\n      name = _parseFilename.name;\n    var count = 0;\n    var nextValue = value;\n    while (nextArray.includes(nextValue)) {\n      nextValue = [name, \"(\".concat(++count, \")\")].filter(function (segment) {\n        return segment;\n      }).join(' ') + extname;\n    }\n    nextArray.push(nextValue);\n  });\n  return nextArray;\n}","map":{"version":3,"mappings":";;;;;;;AAAA;AAEe,SAASA,eAAT,CAAyBC,KAAzB,EAA0C;EACrD,IAAMC,SAAmB,GAAG,EAA5B;EAEAD,KAAK,CAACE,OAAN,CAAc,eAAK,EAAI;IAAA,qBACO,gCAAcC,KAAd,CADP;MACXC,OADW,kBACXA,OADW;MACFC,IADE,kBACFA,IADE;IAEnB,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,SAAS,GAAGJ,KAAhB;IAEA,OAAOF,SAAS,CAACO,QAAV,CAAmBD,SAAnB,CAAP,EAAsC;MAClCA,SAAS,GAAG,CAACF,IAAD,aAAa,EAAEC,KAAf,QAA2BG,MAA3B,CAAkC,iBAAO;QAAA,OAAIC,OAAJ;MAAA,CAAzC,EAAsDC,IAAtD,CAA2D,GAA3D,IAAkEP,OAA9E;IACH;IAEDH,SAAS,CAACW,IAAV,CAAeL,SAAf;EACH,CAVD;EAYA,OAAON,SAAP;AACH","names":["dedupeFilenames","array","nextArray","forEach","value","extname","name","count","nextValue","includes","filter","segment","join","push"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\botframework-directlinejs\\src\\dedupeFilenames.ts"],"sourcesContent":["import parseFilename from './parseFilename';\n\nexport default function dedupeFilenames(array: string[]) {\n    const nextArray: string[] = [];\n\n    array.forEach(value => {\n        const { extname, name } = parseFilename(value);\n        let count = 0;\n        let nextValue = value;\n\n        while (nextArray.includes(nextValue)) {\n            nextValue = [name, `(${ (++count) })`].filter(segment => segment).join(' ') + extname;\n        }\n\n        nextArray.push(nextValue);\n    });\n\n    return nextArray;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}