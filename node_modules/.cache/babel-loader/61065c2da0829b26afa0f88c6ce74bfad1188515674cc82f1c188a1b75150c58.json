{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../../util/root');\nvar tryCatch_1 = require('../../util/tryCatch');\nvar errorObject_1 = require('../../util/errorObject');\nvar Observable_1 = require('../../Observable');\nvar Subscriber_1 = require('../../Subscriber');\nvar map_1 = require('../../operators/map');\nfunction getCORSRequest() {\n  if (root_1.root.XMLHttpRequest) {\n    return new root_1.root.XMLHttpRequest();\n  } else if (!!root_1.root.XDomainRequest) {\n    return new root_1.root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\nfunction getXMLHttpRequest() {\n  if (root_1.root.XMLHttpRequest) {\n    return new root_1.root.XMLHttpRequest();\n  } else {\n    var progId = void 0;\n    try {\n      var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (var i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root_1.root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {}\n      }\n      return new root_1.root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\nfunction ajaxGet(url, headers) {\n  if (headers === void 0) {\n    headers = null;\n  }\n  return new AjaxObservable({\n    method: 'GET',\n    url: url,\n    headers: headers\n  });\n}\nexports.ajaxGet = ajaxGet;\n;\nfunction ajaxPost(url, body, headers) {\n  return new AjaxObservable({\n    method: 'POST',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexports.ajaxPost = ajaxPost;\n;\nfunction ajaxDelete(url, headers) {\n  return new AjaxObservable({\n    method: 'DELETE',\n    url: url,\n    headers: headers\n  });\n}\nexports.ajaxDelete = ajaxDelete;\n;\nfunction ajaxPut(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PUT',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexports.ajaxPut = ajaxPut;\n;\nfunction ajaxPatch(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PATCH',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexports.ajaxPatch = ajaxPatch;\n;\nvar mapResponse = map_1.map(function (x, index) {\n  return x.response;\n});\nfunction ajaxGetJSON(url, headers) {\n  return mapResponse(new AjaxObservable({\n    method: 'GET',\n    url: url,\n    responseType: 'json',\n    headers: headers\n  }));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = function (_super) {\n  __extends(AjaxObservable, _super);\n  function AjaxObservable(urlOrRequest) {\n    _super.call(this);\n    var request = {\n      async: true,\n      createXHR: function () {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (var prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n    this.request = request;\n  }\n  /** @deprecated internal use only */\n  AjaxObservable.prototype._subscribe = function (subscriber) {\n    return new AjaxSubscriber(subscriber, this.request);\n  };\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  AjaxObservable.create = function () {\n    var create = function (urlOrRequest) {\n      return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n  }();\n  return AjaxObservable;\n}(Observable_1.Observable);\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = function (_super) {\n  __extends(AjaxSubscriber, _super);\n  function AjaxSubscriber(destination, request) {\n    _super.call(this, destination);\n    this.request = request;\n    this.done = false;\n    var headers = request.headers = request.headers || {};\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n    this.send();\n  }\n  AjaxSubscriber.prototype.next = function (e) {\n    this.done = true;\n    var _a = this,\n      xhr = _a.xhr,\n      request = _a.request,\n      destination = _a.destination;\n    var response = new AjaxResponse(e, xhr, request);\n    destination.next(response);\n  };\n  AjaxSubscriber.prototype.send = function () {\n    var _a = this,\n      request = _a.request,\n      _b = _a.request,\n      user = _b.user,\n      method = _b.method,\n      url = _b.url,\n      async = _b.async,\n      password = _b.password,\n      headers = _b.headers,\n      body = _b.body;\n    var createXHR = request.createXHR;\n    var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n    if (xhr === errorObject_1.errorObject) {\n      this.error(errorObject_1.errorObject.e);\n    } else {\n      this.xhr = xhr;\n      // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n      this.setupEvents(xhr, request);\n      // open XHR\n      var result = void 0;\n      if (user) {\n        result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n      if (result === errorObject_1.errorObject) {\n        this.error(errorObject_1.errorObject.e);\n        return null;\n      }\n      // timeout, responseType and withCredentials can be set once the XHR is open\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType;\n      }\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n      // set headers\n      this.setHeaders(xhr, headers);\n      // finally send the request\n      result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n      if (result === errorObject_1.errorObject) {\n        this.error(errorObject_1.errorObject.e);\n        return null;\n      }\n    }\n    return xhr;\n  };\n  AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n      return body;\n    }\n    if (contentType) {\n      var splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(function (key) {\n          return encodeURI(key) + \"=\" + encodeURI(body[key]);\n        }).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  };\n  AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n    for (var key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  };\n  AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n    var progressSubscriber = request.progressSubscriber;\n    function xhrTimeout(e) {\n      var _a = xhrTimeout,\n        subscriber = _a.subscriber,\n        progressSubscriber = _a.progressSubscriber,\n        request = _a.request;\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    }\n\n    ;\n    xhr.ontimeout = xhrTimeout;\n    xhrTimeout.request = request;\n    xhrTimeout.subscriber = this;\n    xhrTimeout.progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        var xhrProgress_1;\n        xhrProgress_1 = function (e) {\n          var progressSubscriber = xhrProgress_1.progressSubscriber;\n          progressSubscriber.next(e);\n        };\n        if (root_1.root.XDomainRequest) {\n          xhr.onprogress = xhrProgress_1;\n        } else {\n          xhr.upload.onprogress = xhrProgress_1;\n        }\n        xhrProgress_1.progressSubscriber = progressSubscriber;\n      }\n      var xhrError_1;\n      xhrError_1 = function (e) {\n        var _a = xhrError_1,\n          progressSubscriber = _a.progressSubscriber,\n          subscriber = _a.subscriber,\n          request = _a.request;\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      xhr.onerror = xhrError_1;\n      xhrError_1.request = request;\n      xhrError_1.subscriber = this;\n      xhrError_1.progressSubscriber = progressSubscriber;\n    }\n    function xhrReadyStateChange(e) {\n      var _a = xhrReadyStateChange,\n        subscriber = _a.subscriber,\n        progressSubscriber = _a.progressSubscriber,\n        request = _a.request;\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        var status_1 = this.status === 1223 ? 204 : this.status;\n        var response = this.responseType === 'text' ? this.response || this.responseText : this.response;\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status_1 === 0) {\n          status_1 = response ? 200 : 0;\n        }\n        if (200 <= status_1 && status_1 < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n        }\n      }\n    }\n    ;\n    xhr.onreadystatechange = xhrReadyStateChange;\n    xhrReadyStateChange.subscriber = this;\n    xhrReadyStateChange.progressSubscriber = progressSubscriber;\n    xhrReadyStateChange.request = request;\n  };\n  AjaxSubscriber.prototype.unsubscribe = function () {\n    var _a = this,\n      done = _a.done,\n      xhr = _a.xhr;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    _super.prototype.unsubscribe.call(this);\n  };\n  return AjaxSubscriber;\n}(Subscriber_1.Subscriber);\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = function () {\n  function AjaxResponse(originalEvent, xhr, request) {\n    this.originalEvent = originalEvent;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n  return AjaxResponse;\n}();\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = function (_super) {\n  __extends(AjaxError, _super);\n  function AjaxError(message, xhr, request) {\n    _super.call(this, message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n  return AjaxError;\n}(Error);\nexports.AjaxError = AjaxError;\nfunction parseXhrResponse(responseType, xhr) {\n  switch (responseType) {\n    case 'json':\n      if ('response' in xhr) {\n        //IE does not support json as responseType, parse it internally\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n      } else {\n        // HACK(benlesh): TypeScript shennanigans\n        // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n        return JSON.parse(xhr.responseText || 'null');\n      }\n    case 'xml':\n      return xhr.responseXML;\n    case 'text':\n    default:\n      // HACK(benlesh): TypeScript shennanigans\n      // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n      return 'response' in xhr ? xhr.response : xhr.responseText;\n  }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = function (_super) {\n  __extends(AjaxTimeoutError, _super);\n  function AjaxTimeoutError(xhr, request) {\n    _super.call(this, 'ajax timeout', xhr, request);\n  }\n  return AjaxTimeoutError;\n}(AjaxError);\nexports.AjaxTimeoutError = AjaxTimeoutError;","map":{"version":3,"mappings":"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","names":["root_1","XMLHttpRequest","XDomainRequest","Error","progId","progIds","i","ActiveXObject","e","url","headers","AjaxObservable","method","exports","body","mapResponse","map_1","x","index","response","responseType","__extends","urlOrRequest","_super","request","async","createXHR","crossDomain","getCORSRequest","call","getXMLHttpRequest","withCredentials","timeout","prop","hasOwnProperty","subscriber","AjaxSubscriber","create","get","ajaxGet","post","ajaxPost","delete","ajaxDelete","put","ajaxPut","patch","ajaxPatch","getJSON","ajaxGetJSON","Observable_1","destination","FormData","serializeBody","send","done","xhr","AjaxResponse","next","_b","user","password","tryCatch_1","errorObject_1","error","setupEvents","result","open","setHeaders","contentType","splitIndex","indexOf","substring","Object","keys","map","encodeURI","key","join","JSON","stringify","setRequestHeader","progressSubscriber","AjaxTimeoutError","ontimeout","xhrTimeout","upload","xhrProgress_1","onprogress","xhrError_1","AjaxError","onerror","readyState","status_1","status","responseText","complete","onreadystatechange","xhrReadyStateChange","abort","unsubscribe","Subscriber_1","originalEvent","parseXhrResponse","message","parse","responseXML"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\src\\observable\\dom\\AjaxObservable.ts"],"sourcesContent":["import { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { TeardownLogic } from '../../Subscription';\nimport { map } from '../../operators/map';\n\nexport interface AjaxRequest {\n  url?: string;\n  body?: any;\n  user?: string;\n  async?: boolean;\n  method?: string;\n  headers?: Object;\n  timeout?: number;\n  password?: string;\n  hasContent?: boolean;\n  crossDomain?: boolean;\n  withCredentials?: boolean;\n  createXHR?: () => XMLHttpRequest;\n  progressSubscriber?: Subscriber<any>;\n  responseType?: string;\n}\n\nfunction getCORSRequest(this: AjaxRequest): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId: string;\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {\n          //suppress exceptions\n        }\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport interface AjaxCreationMethod {\n  (urlOrRequest: string | AjaxRequest): Observable<AjaxResponse>;\n  get(url: string, headers?: Object): Observable<AjaxResponse>;\n  post(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  put(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  patch(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  delete(url: string, headers?: Object): Observable<AjaxResponse>;\n  getJSON<T>(url: string, headers?: Object): Observable<T>;\n}\n\nexport function ajaxGet(url: string, headers: Object = null) {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, headers });\n};\n\nexport function ajaxPost(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'POST', url, body, headers });\n};\n\nexport function ajaxDelete(url: string, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'DELETE', url, headers });\n};\n\nexport function ajaxPut(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PUT', url, body, headers });\n};\n\nexport function ajaxPatch(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PATCH', url, body, headers });\n};\n\nconst mapResponse = map((x: AjaxResponse, index: number) => x.response);\n\nexport function ajaxGetJSON<T>(url: string, headers?: Object): Observable<T> {\n  return mapResponse(\n    new AjaxObservable<AjaxResponse>({\n      method: 'GET',\n      url,\n      responseType: 'json',\n      headers\n    })\n  );\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class AjaxObservable<T> extends Observable<T> {\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  static create: AjaxCreationMethod = (() => {\n    const create: any = (urlOrRequest: string | AjaxRequest) => {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n\n    return <AjaxCreationMethod>create;\n  })();\n\n  private request: AjaxRequest;\n\n  constructor(urlOrRequest: string | AjaxRequest) {\n    super();\n\n    const request: AjaxRequest = {\n      async: true,\n      createXHR: function(this: AjaxRequest) {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AjaxSubscriber<T> extends Subscriber<Event> {\n  private xhr: XMLHttpRequest;\n  private done: boolean = false;\n\n  constructor(destination: Subscriber<T>, public request: AjaxRequest) {\n    super(destination);\n\n    const headers = request.headers = request.headers || {};\n\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\n    this.send();\n  }\n\n  next(e: Event): void {\n    this.done = true;\n    const { xhr, request, destination } = this;\n    const response = new AjaxResponse(e, xhr, request);\n\n    destination.next(response);\n  }\n\n  private send(): XMLHttpRequest {\n    const {\n      request,\n      request: { user, method, url, async, password, headers, body }\n    } = this;\n    const createXHR = request.createXHR;\n    const xhr: XMLHttpRequest = tryCatch(createXHR).call(request);\n\n    if (<any>xhr === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      this.xhr = xhr;\n\n      // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n      this.setupEvents(xhr, request);\n      // open XHR\n      let result: any;\n      if (user) {\n        result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n\n      // timeout, responseType and withCredentials can be set once the XHR is open\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType as any;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      // set headers\n      this.setHeaders(xhr, headers);\n\n      // finally send the request\n      result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  }\n\n  private serializeBody(body: any, contentType?: string) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURI(key)}=${encodeURI(body[key])}`).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  }\n\n  private setHeaders(xhr: XMLHttpRequest, headers: Object) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest, request: AjaxRequest) {\n    const progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(this: XMLHttpRequest, e: ProgressEvent) {\n      const {subscriber, progressSubscriber, request } = (<any>xhrTimeout);\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    };\n    xhr.ontimeout = xhrTimeout;\n    (<any>xhrTimeout).request = request;\n    (<any>xhrTimeout).subscriber = this;\n    (<any>xhrTimeout).progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        let xhrProgress: (e: ProgressEvent) => void;\n        xhrProgress = function(e: ProgressEvent) {\n          const { progressSubscriber } = (<any>xhrProgress);\n          progressSubscriber.next(e);\n        };\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress;\n        } else {\n          xhr.upload.onprogress = xhrProgress;\n        }\n        (<any>xhrProgress).progressSubscriber = progressSubscriber;\n      }\n      let xhrError: (e: ErrorEvent) => void;\n      xhrError = function(this: XMLHttpRequest, e: ErrorEvent) {\n        const { progressSubscriber, subscriber, request } = (<any>xhrError);\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      xhr.onerror = xhrError;\n      (<any>xhrError).request = request;\n      (<any>xhrError).subscriber = this;\n      (<any>xhrError).progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(this: XMLHttpRequest, e: ProgressEvent) {\n      const { subscriber, progressSubscriber, request } = (<any>xhrReadyStateChange);\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = this.status === 1223 ? 204 : this.status;\n        let response: any = (this.responseType === 'text' ?  (\n          this.response || this.responseText) : this.response);\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status, this, request));\n        }\n      }\n    };\n    xhr.onreadystatechange = xhrReadyStateChange;\n    (<any>xhrReadyStateChange).subscriber = this;\n    (<any>xhrReadyStateChange).progressSubscriber = progressSubscriber;\n    (<any>xhrReadyStateChange).request = request;\n  }\n\n  unsubscribe() {\n    const { done, xhr } = this;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    super.unsubscribe();\n  }\n}\n\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport class AjaxResponse {\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  /** @type {string} The raw responseText */\n  responseText: string;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  constructor(public originalEvent: Event, public xhr: XMLHttpRequest, public request: AjaxRequest) {\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport class AjaxError extends Error {\n  /** @type {XMLHttpRequest} The XHR instance associated with the error */\n  xhr: XMLHttpRequest;\n\n  /** @type {AjaxRequest} The AjaxRequest associated with the error */\n  request: AjaxRequest;\n\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  constructor(message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n    super(message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\nfunction parseXhrResponse(responseType: string, xhr: XMLHttpRequest) {\n  switch (responseType) {\n    case 'json':\n        if ('response' in xhr) {\n          //IE does not support json as responseType, parse it internally\n          return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n        } else {\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return JSON.parse((xhr as any).responseText || 'null');\n        }\n      case 'xml':\n        return xhr.responseXML;\n      case 'text':\n      default:\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return  ('response' in xhr) ? xhr.response : (xhr as any).responseText;\n  }\n}\n\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport class AjaxTimeoutError extends AjaxError {\n  constructor(xhr: XMLHttpRequest, request: AjaxRequest) {\n    super('ajax timeout', xhr, request);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}