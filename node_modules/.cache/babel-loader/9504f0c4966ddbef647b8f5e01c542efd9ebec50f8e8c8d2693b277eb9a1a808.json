{"ast":null,"code":"\"use strict\";\n\nvar root_1 = require('../util/root');\nfunction symbolIteratorPonyfill(root) {\n  var Symbol = root.Symbol;\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    var Set_1 = root.Set;\n    if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    var Map_1 = root.Map;\n    // required for compatability with es6-shim\n    if (Map_1) {\n      var keys = Object.getOwnPropertyNames(Map_1.prototype);\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;","map":{"version":3,"mappings":";;AAAA,qBAAqB,cAAc,CAAC;AAEpC,gCAAuCA,IAAS;EAC9C,IAAMC,MAAM,GAAQD,IAAI,CAACC,MAAM;EAE/B,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;IAChC,IAAI,CAACA,MAAM,CAACC,QAAQ,EAAE;MACpBD,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAAC,mBAAmB,CAAC;IAC/C;IACA,OAAOA,MAAM,CAACC,QAAQ;EACxB,CAAC,MAAM;IACL;IACQ,oBAAG;IACX,IAAIC,KAAG,IAAI,OAAO,IAAIA,KAAG,EAAE,CAAC,YAAY,CAAC,KAAK,UAAU,EAAE;MACxD,OAAO,YAAY;IACrB;IACQ,oBAAG;IACX;IACA,IAAIC,KAAG,EAAE;MACP,IAAIC,IAAI,GAAGC,MAAM,CAACC,mBAAmB,CAACH,KAAG,CAACI,SAAS,CAAC;MACpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAE,EAAED,CAAC,EAAE;QACpC,IAAIE,GAAG,GAAGN,IAAI,CAACI,CAAC,CAAC;QACjB;QACA,IAAIE,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,MAAM,IAAIP,KAAG,CAACI,SAAS,CAACG,GAAG,CAAC,KAAKP,KAAG,CAACI,SAAS,CAAC,SAAS,CAAC,EAAE;UAC1F,OAAOG,GAAG;QACZ;MACF;IACF;IACA,OAAO,YAAY;EACrB;AACF;AA5BgBC,8BAAsB,yBA4BrC;AAEYA,gBAAQ,GAAGC,sBAAsB,CAACC,WAAI,CAAC;AAEpD;;;AAGaF,kBAAU,GAAGA,gBAAQ","names":["root","Symbol","iterator","Set_1","Map_1","keys","Object","getOwnPropertyNames","prototype","i","length","key","exports","symbolIteratorPonyfill","root_1"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\src\\symbol\\iterator.ts"],"sourcesContent":["import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}