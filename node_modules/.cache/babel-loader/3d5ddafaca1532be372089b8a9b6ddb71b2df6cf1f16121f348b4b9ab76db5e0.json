{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar payloadTypes_1 = require(\"../payloads/payloadTypes\");\nvar payloadDisassembler_1 = require(\"./payloadDisassembler\");\n/**\n * Streaming request disassembler.\n */\nvar RequestDisassembler = /** @class */function (_super) {\n  __extends(RequestDisassembler, _super);\n  function RequestDisassembler(sender, id, request) {\n    var _this = _super.call(this, sender, id) || this;\n    _this.payloadType = payloadTypes_1.PayloadTypes.request;\n    _this.request = request;\n    return _this;\n  }\n  RequestDisassembler.prototype.getStream = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload;\n      return __generator(this, function (_a) {\n        payload = {\n          verb: this.request.verb,\n          path: this.request.path,\n          streams: []\n        };\n        if (this.request.streams) {\n          this.request.streams.forEach(function (stream) {\n            payload.streams.push(stream.description);\n          });\n        }\n        return [2 /*return*/, payloadDisassembler_1.PayloadDisassembler.serialize(payload)];\n      });\n    });\n  };\n  return RequestDisassembler;\n}(payloadDisassembler_1.PayloadDisassembler);\nexports.RequestDisassembler = RequestDisassembler;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA;;;;AAIA;AAGA;AAIA;;;AAGA;EAAyCA;EAIrC,6BAAmBC,MAAqB,EAAEC,EAAU,EAAEC,OAA0B;IAAhF,YACIC,kBAAMH,MAAM,EAAEC,EAAE,CAAC;IAHdG,iBAAW,GAAiBC,2BAAY,CAACH,OAAO;IAInDE,KAAI,CAACF,OAAO,GAAGA,OAAO;;EAC1B;EAEaI,uCAAS,GAAtB;;;;QACQC,OAAO,GAAoB;UAACC,IAAI,EAAE,IAAI,CAACN,OAAO,CAACM,IAAI;UAAEC,IAAI,EAAE,IAAI,CAACP,OAAO,CAACO,IAAI;UAAEC,OAAO,EAAE;QAAE,CAAC;QAC9F,IAAI,IAAI,CAACR,OAAO,CAACQ,OAAO,EAAE;UACtB,IAAI,CAACR,OAAO,CAACQ,OAAO,CAACC,OAAO,CAAC,UAASC,MAAM;YACxCL,OAAO,CAACG,OAAO,CAACG,IAAI,CAACD,MAAM,CAACE,WAAW,CAAC;UAC5C,CAAC,CAAC;;QAEN,sBAAOC,yCAAmB,CAACC,SAAS,CAACT,OAAO,CAAC;;;GAChD;EACL,0BAAC;AAAD,CAAC,CAlBwCQ,yCAAmB;AAA/CE","names":["__extends","sender","id","request","_super","_this","payloadTypes_1","RequestDisassembler","payload","verb","path","streams","forEach","stream","push","description","payloadDisassembler_1","serialize","exports"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\botframework-streaming\\src\\disassemblers\\requestDisassembler.ts"],"sourcesContent":["/**\r\n * @module botframework-streaming\r\n */\r\n/**\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { PayloadTypes } from '../payloads/payloadTypes';\r\nimport { PayloadSender } from '../payloadTransport/payloadSender';\r\nimport { StreamingRequest } from '../streamingRequest';\r\nimport { PayloadDisassembler } from './payloadDisassembler';\r\nimport { IStreamWrapper } from '../interfaces/IStreamWrapper';\r\nimport { IRequestPayload } from '../interfaces/IRequestPayload';\r\n\r\n/**\r\n * Streaming request disassembler.\r\n */\r\nexport class RequestDisassembler extends PayloadDisassembler {\r\n    public request: StreamingRequest;\r\n    public payloadType: PayloadTypes = PayloadTypes.request;\r\n\r\n    public constructor(sender: PayloadSender, id: string, request?: StreamingRequest) {\r\n        super(sender, id);\r\n        this.request = request;\r\n    }\r\n\r\n    public async getStream(): Promise<IStreamWrapper> {\r\n        let payload: IRequestPayload = {verb: this.request.verb, path: this.request.path, streams: []};\r\n        if (this.request.streams) {\r\n            this.request.streams.forEach(function(stream){\r\n                payload.streams.push(stream.description);\r\n            });\r\n        }\r\n        return PayloadDisassembler.serialize(payload);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}