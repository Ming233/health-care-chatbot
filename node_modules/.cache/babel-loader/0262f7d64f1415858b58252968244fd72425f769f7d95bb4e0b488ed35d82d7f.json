{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = function (_super) {\n  __extends(SubjectSubscriber, _super);\n  function SubjectSubscriber(destination) {\n    _super.call(this, destination);\n    this.destination = destination;\n  }\n  return SubjectSubscriber;\n}(Subscriber_1.Subscriber);\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = function (_super) {\n  __extends(Subject, _super);\n  function Subject() {\n    _super.call(this);\n    this.observers = [];\n    this.closed = false;\n    this.isStopped = false;\n    this.hasError = false;\n    this.thrownError = null;\n  }\n  Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n    return new SubjectSubscriber(this);\n  };\n  Subject.prototype.lift = function (operator) {\n    var subject = new AnonymousSubject(this, this);\n    subject.operator = operator;\n    return subject;\n  };\n  Subject.prototype.next = function (value) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n      for (var i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  };\n  Subject.prototype.error = function (err) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    var observers = this.observers;\n    var len = observers.length;\n    var copy = observers.slice();\n    for (var i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  };\n  Subject.prototype.complete = function () {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    var observers = this.observers;\n    var len = observers.length;\n    var copy = observers.slice();\n    for (var i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  };\n  Subject.prototype.unsubscribe = function () {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  };\n  Subject.prototype._trySubscribe = function (subscriber) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    } else {\n      return _super.prototype._trySubscribe.call(this, subscriber);\n    }\n  };\n  /** @deprecated internal use only */\n  Subject.prototype._subscribe = function (subscriber) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription_1.Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription_1.Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n    }\n  };\n  Subject.prototype.asObservable = function () {\n    var observable = new Observable_1.Observable();\n    observable.source = this;\n    return observable;\n  };\n  Subject.create = function (destination, source) {\n    return new AnonymousSubject(destination, source);\n  };\n  return Subject;\n}(Observable_1.Observable);\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = function (_super) {\n  __extends(AnonymousSubject, _super);\n  function AnonymousSubject(destination, source) {\n    _super.call(this);\n    this.destination = destination;\n    this.source = source;\n  }\n  AnonymousSubject.prototype.next = function (value) {\n    var destination = this.destination;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  };\n  AnonymousSubject.prototype.error = function (err) {\n    var destination = this.destination;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  };\n  AnonymousSubject.prototype.complete = function () {\n    var destination = this.destination;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  };\n  /** @deprecated internal use only */\n  AnonymousSubject.prototype._subscribe = function (subscriber) {\n    var source = this.source;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription_1.Subscription.EMPTY;\n    }\n  };\n  return AnonymousSubject;\n}(Subject);\nexports.AnonymousSubject = AnonymousSubject;","map":{"version":3,"mappings":"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","names":["__extends","destination","_super","Subscriber_1","exports","Subject","rxSubscriber_1","SubjectSubscriber","operator","subject","AnonymousSubject","value","closed","ObjectUnsubscribedError_1","isStopped","len","observers","length","copy","slice","i","next","err","hasError","thrownError","error","complete","subscriber","_trySubscribe","Subscription_1","EMPTY","push","SubjectSubscription_1","observable","Observable_1","source","subscribe"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\src\\Subject.ts"],"sourcesContent":["import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}