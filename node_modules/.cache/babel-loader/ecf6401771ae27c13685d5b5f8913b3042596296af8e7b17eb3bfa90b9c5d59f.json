{"ast":null,"code":"/**\n * @hidden\n */\nexport var defaultFormat = 'd';\n/**\n * @hidden\n */\nexport var defaultFormatPlaceholder = 'wide';\n/**\n * @hidden\n */\nexport var padZero = function (length) {\n  return new Array(Math.max(length, 0)).fill('0').join('');\n};\n/**\n * @hidden\n */\nexport var approximateStringMatching = function (oldTextOrigin, oldFormat, newTextOrigin, selectionStart) {\n  /*\n    Remove the right part of the cursor.\n    oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n  */\n  var oldTextSeparator = oldTextOrigin[selectionStart + oldTextOrigin.length - newTextOrigin.length];\n  var oldText = oldTextOrigin.substring(0, selectionStart + oldTextOrigin.length - newTextOrigin.length);\n  var newText = newTextOrigin.substring(0, selectionStart);\n  var diff = [];\n  /* Handle the typing of a single character over the same selection. */\n  if (oldText === newText && selectionStart > 0) {\n    diff.push([oldFormat[selectionStart - 1], newText[selectionStart - 1]]);\n    return diff;\n  }\n  if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n    /* Handle Delete/Backspace. */\n    var deletedSymbol = '';\n    /*\n        The whole text is replaced by the same character.\n        A nasty patch is required to keep the selection in the first segment.\n    */\n    if (newText.length === 1) {\n      diff.push([oldFormat[0], newText[0]]);\n    }\n    for (var i = newText.length; i < oldText.length; i++) {\n      if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== '_') {\n        deletedSymbol = oldFormat[i];\n        diff.push([deletedSymbol, '']);\n      }\n    }\n    return diff;\n  }\n  /*\n      Handle the insertion of the text (the new text is longer than the previous one).\n      Handle the typing over a literal as well.\n  */\n  if (newText.indexOf(oldText) === 0 || oldFormat[selectionStart - 1] === '_') {\n    var symbol = oldFormat[0];\n    for (var i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n      if (oldFormat[i] !== '_') {\n        symbol = oldFormat[i];\n        break;\n      }\n    }\n    return [[symbol, newText[selectionStart - 1]]];\n  }\n  /* Handle the entering of a space or a separator for navigating to the next item. */\n  if (newText[newText.length - 1] === ' ' || newText[newText.length - 1] === oldTextSeparator) {\n    return [[oldFormat[selectionStart - 1], '_']];\n  }\n  /* Handle typing over a correctly selected part. */\n  return [[oldFormat[selectionStart - 1], newText[selectionStart - 1]]];\n};\n/**\n * @hidden\n */\nexport var dateSymbolMap = function (map, part) {\n  map[part.pattern[0]] = part.type;\n  return map;\n};\n/**\n * @hidden\n */\nexport var isInRange = function (candidate, min, max) {\n  return candidate === null || !(min && min > candidate || max && max < candidate);\n};\n/**\n * @hidden\n */\nexport var invalidClasses = ['k-invalid'];\n/** @hidden */\nexport var wrapperClasses = ['k-widget', 'k-dateinput'];","map":{"version":3,"names":["defaultFormat","defaultFormatPlaceholder","padZero","length","Array","Math","max","fill","join","approximateStringMatching","oldTextOrigin","oldFormat","newTextOrigin","selectionStart","oldTextSeparator","oldText","substring","newText","diff","push","indexOf","deletedSymbol","i","symbol","dateSymbolMap","map","part","pattern","type","isInRange","candidate","min","invalidClasses","wrapperClasses"],"sources":["C:/Projects/health-care-chatbot/node_modules/@progress/kendo-react-dateinputs/dist/es/dateinput/utils.js"],"sourcesContent":["/**\n * @hidden\n */\nexport var defaultFormat = 'd';\n/**\n * @hidden\n */\nexport var defaultFormatPlaceholder = 'wide';\n/**\n * @hidden\n */\nexport var padZero = function (length) { return new Array(Math.max(length, 0)).fill('0').join(''); };\n/**\n * @hidden\n */\nexport var approximateStringMatching = function (oldTextOrigin, oldFormat, newTextOrigin, selectionStart) {\n    /*\n      Remove the right part of the cursor.\n      oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n    */\n    var oldTextSeparator = oldTextOrigin[selectionStart + oldTextOrigin.length - newTextOrigin.length];\n    var oldText = oldTextOrigin.substring(0, selectionStart + oldTextOrigin.length - newTextOrigin.length);\n    var newText = newTextOrigin.substring(0, selectionStart);\n    var diff = [];\n    /* Handle the typing of a single character over the same selection. */\n    if (oldText === newText && selectionStart > 0) {\n        diff.push([oldFormat[selectionStart - 1], newText[selectionStart - 1]]);\n        return diff;\n    }\n    if (oldText.indexOf(newText) === 0 &&\n        (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n        /* Handle Delete/Backspace. */\n        var deletedSymbol = '';\n        /*\n            The whole text is replaced by the same character.\n            A nasty patch is required to keep the selection in the first segment.\n        */\n        if (newText.length === 1) {\n            diff.push([oldFormat[0], newText[0]]);\n        }\n        for (var i = newText.length; i < oldText.length; i++) {\n            if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== '_') {\n                deletedSymbol = oldFormat[i];\n                diff.push([deletedSymbol, '']);\n            }\n        }\n        return diff;\n    }\n    /*\n        Handle the insertion of the text (the new text is longer than the previous one).\n        Handle the typing over a literal as well.\n    */\n    if (newText.indexOf(oldText) === 0 || oldFormat[selectionStart - 1] === '_') {\n        var symbol = oldFormat[0];\n        for (var i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n            if (oldFormat[i] !== '_') {\n                symbol = oldFormat[i];\n                break;\n            }\n        }\n        return [[symbol, newText[selectionStart - 1]]];\n    }\n    /* Handle the entering of a space or a separator for navigating to the next item. */\n    if (newText[newText.length - 1] === ' ' || newText[newText.length - 1] === oldTextSeparator) {\n        return [[oldFormat[selectionStart - 1], '_']];\n    }\n    /* Handle typing over a correctly selected part. */\n    return [[oldFormat[selectionStart - 1], newText[selectionStart - 1]]];\n};\n/**\n * @hidden\n */\nexport var dateSymbolMap = function (map, part) { map[part.pattern[0]] = part.type; return map; };\n/**\n * @hidden\n */\nexport var isInRange = function (candidate, min, max) { return (candidate === null || !((min && min > candidate) || (max && max < candidate))); };\n/**\n * @hidden\n */\nexport var invalidClasses = ['k-invalid'];\n/** @hidden */\nexport var wrapperClasses = ['k-widget', 'k-dateinput'];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}