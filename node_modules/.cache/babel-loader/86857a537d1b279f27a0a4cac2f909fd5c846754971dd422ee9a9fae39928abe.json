{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = function (_super) {\n  __extends(BehaviorSubject, _super);\n  function BehaviorSubject(_value) {\n    _super.call(this);\n    this._value = _value;\n  }\n  Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n    get: function () {\n      return this.getValue();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @deprecated internal use only */\n  BehaviorSubject.prototype._subscribe = function (subscriber) {\n    var subscription = _super.prototype._subscribe.call(this, subscriber);\n    if (subscription && !subscription.closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  };\n  BehaviorSubject.prototype.getValue = function () {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  };\n  BehaviorSubject.prototype.next = function (value) {\n    _super.prototype.next.call(this, this._value = value);\n  };\n  return BehaviorSubject;\n}(Subject_1.Subject);\nexports.BehaviorSubject = BehaviorSubject;","map":{"version":3,"mappings":";;;;;;;;;AAAA,wBAAwB,WAAW,CAAC;AAGpC,wCAAwC,gCAAgC,CAAC;AAEzE;;;AAGA;EAAwCA;EAEtC,yBAAoBC,MAAS;IAC3BC,iBAAO;IADW,WAAM,GAAND,MAAM;EAE1B;EAEAE,sBAAIC,kCAAK;SAAT;MACE,OAAO,IAAI,CAACC,QAAQ,EAAE;IACxB,CAAC;;;;EAED;EAAqCD,oCAAU,GAAV,UAAWE,UAAyB;IACvE,IAAMC,YAAY,GAAGL,gBAAK,CAACM,UAAU,YAACF,UAAU,CAAC;IACjD,IAAIC,YAAY,IAAI,CAAiBA,YAAa,CAACE,MAAM,EAAE;MACzDH,UAAU,CAACI,IAAI,CAAC,IAAI,CAACT,MAAM,CAAC;IAC9B;IACA,OAAOM,YAAY;EACrB,CAAC;EAEDH,kCAAQ,GAAR;IACE,IAAI,IAAI,CAACO,QAAQ,EAAE;MACjB,MAAM,IAAI,CAACC,WAAW;IACxB,CAAC,MAAM,IAAI,IAAI,CAACH,MAAM,EAAE;MACtB,MAAM,IAAII,iDAAuB,EAAE;IACrC,CAAC,MAAM;MACL,OAAO,IAAI,CAACZ,MAAM;IACpB;EACF,CAAC;EAEDG,8BAAI,GAAJ,UAAKU,KAAQ;IACXZ,gBAAK,CAACQ,IAAI,YAAC,IAAI,CAACT,MAAM,GAAGa,KAAK,CAAC;EACjC,CAAC;EACH,sBAAC;AAAD,CAAC,CA/BuCC,iBAAO;AAAlCC,uBAAe,kBA+B3B","names":["__extends","_value","_super","Object","BehaviorSubject","getValue","subscriber","subscription","_subscribe","closed","next","hasError","thrownError","ObjectUnsubscribedError_1","value","Subject_1","exports"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\src\\BehaviorSubject.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}