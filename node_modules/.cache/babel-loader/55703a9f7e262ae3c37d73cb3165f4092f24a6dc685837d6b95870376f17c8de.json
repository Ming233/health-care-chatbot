{"ast":null,"code":"\"use strict\";\n\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject_1.errorObject.e = e;\n    return errorObject_1.errorObject;\n  }\n}\nfunction tryCatch(fn) {\n  tryCatchTarget = fn;\n  return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;","map":{"version":3,"mappings":";;AAAA,4BAA4B,eAAe,CAAC;AAE5C,IAAIA,cAAwB;AAE5B;EACE,IAAI;IACF,OAAOA,cAAc,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC9C,CAAE,QAAOC,CAAC,EAAE;IACVC,yBAAW,CAACD,CAAC,GAAGA,CAAC;IACjB,OAAOC,yBAAW;EACpB;AACF;AAEA,kBAA6CC,EAAK;EAChDL,cAAc,GAAGK,EAAE;EACnB,OAAYC,UAAU;AACxB;AAHgBC,gBAAQ,WAGvB;AAAA","names":["tryCatchTarget","apply","arguments","e","errorObject_1","fn","tryCatcher","exports"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\src\\util\\tryCatch.ts"],"sourcesContent":["import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}