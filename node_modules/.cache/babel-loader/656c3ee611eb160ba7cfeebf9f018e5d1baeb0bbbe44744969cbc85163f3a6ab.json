{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar Enums = require(\"./enums\");\nvar Utils = require(\"./utils\");\nvar Shared = require(\"./shared\");\nvar ColorDefinition = /** @class */function () {\n  function ColorDefinition(defaultColor, subtleColor) {\n    this.default = \"#000000\";\n    this.subtle = \"#666666\";\n    if (defaultColor) {\n      this.default = defaultColor;\n    }\n    if (subtleColor) {\n      this.subtle = subtleColor;\n    }\n  }\n  ColorDefinition.prototype.parse = function (obj) {\n    if (obj) {\n      this.default = obj[\"default\"] || this.default;\n      this.subtle = obj[\"subtle\"] || this.subtle;\n    }\n  };\n  return ColorDefinition;\n}();\nexports.ColorDefinition = ColorDefinition;\nvar TextColorDefinition = /** @class */function (_super) {\n  __extends(TextColorDefinition, _super);\n  function TextColorDefinition() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\n    return _this;\n  }\n  TextColorDefinition.prototype.parse = function (obj) {\n    _super.prototype.parse.call(this, obj);\n    if (obj) {\n      this.highlightColors.parse(obj[\"highlightColors\"]);\n    }\n  };\n  return TextColorDefinition;\n}(ColorDefinition);\nexports.TextColorDefinition = TextColorDefinition;\nvar AdaptiveCardConfig = /** @class */function () {\n  function AdaptiveCardConfig(obj) {\n    this.allowCustomStyle = false;\n    if (obj) {\n      this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\n    }\n  }\n  return AdaptiveCardConfig;\n}();\nexports.AdaptiveCardConfig = AdaptiveCardConfig;\nvar ImageSetConfig = /** @class */function () {\n  function ImageSetConfig(obj) {\n    this.imageSize = Enums.Size.Medium;\n    this.maxImageHeight = 100;\n    if (obj) {\n      this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\n      this.maxImageHeight = Utils.getNumberValue(obj[\"maxImageHeight\"], 100);\n    }\n  }\n  ImageSetConfig.prototype.toJSON = function () {\n    return {\n      imageSize: Enums.Size[this.imageSize],\n      maxImageHeight: this.maxImageHeight\n    };\n  };\n  return ImageSetConfig;\n}();\nexports.ImageSetConfig = ImageSetConfig;\nvar MediaConfig = /** @class */function () {\n  function MediaConfig(obj) {\n    this.allowInlinePlayback = true;\n    if (obj) {\n      this.defaultPoster = obj[\"defaultPoster\"];\n      this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\n    }\n  }\n  MediaConfig.prototype.toJSON = function () {\n    return {\n      defaultPoster: this.defaultPoster,\n      allowInlinePlayback: this.allowInlinePlayback\n    };\n  };\n  return MediaConfig;\n}();\nexports.MediaConfig = MediaConfig;\nvar FactTextDefinition = /** @class */function () {\n  function FactTextDefinition(obj) {\n    this.size = Enums.TextSize.Default;\n    this.color = Enums.TextColor.Default;\n    this.isSubtle = false;\n    this.weight = Enums.TextWeight.Default;\n    this.wrap = true;\n    if (obj) {\n      this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\n      this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\n      this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\n      this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\n      this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\n    }\n  }\n  ;\n  FactTextDefinition.prototype.getDefaultWeight = function () {\n    return Enums.TextWeight.Default;\n  };\n  FactTextDefinition.prototype.toJSON = function () {\n    return {\n      size: Enums.TextSize[this.size],\n      color: Enums.TextColor[this.color],\n      isSubtle: this.isSubtle,\n      weight: Enums.TextWeight[this.weight],\n      wrap: this.wrap\n    };\n  };\n  return FactTextDefinition;\n}();\nexports.FactTextDefinition = FactTextDefinition;\nvar FactTitleDefinition = /** @class */function (_super) {\n  __extends(FactTitleDefinition, _super);\n  function FactTitleDefinition(obj) {\n    var _this = _super.call(this, obj) || this;\n    _this.maxWidth = 150;\n    _this.weight = Enums.TextWeight.Bolder;\n    if (obj) {\n      _this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : _this.maxWidth;\n      _this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\n    }\n    return _this;\n  }\n  FactTitleDefinition.prototype.getDefaultWeight = function () {\n    return Enums.TextWeight.Bolder;\n  };\n  return FactTitleDefinition;\n}(FactTextDefinition);\nexports.FactTitleDefinition = FactTitleDefinition;\nvar FactSetConfig = /** @class */function () {\n  function FactSetConfig(obj) {\n    this.title = new FactTitleDefinition();\n    this.value = new FactTextDefinition();\n    this.spacing = 10;\n    if (obj) {\n      this.title = new FactTitleDefinition(obj[\"title\"]);\n      this.value = new FactTextDefinition(obj[\"value\"]);\n      this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\n    }\n  }\n  return FactSetConfig;\n}();\nexports.FactSetConfig = FactSetConfig;\nvar ShowCardActionConfig = /** @class */function () {\n  function ShowCardActionConfig(obj) {\n    this.actionMode = Enums.ShowCardActionMode.Inline;\n    this.inlineTopMargin = 16;\n    this.style = Enums.ContainerStyle.Emphasis;\n    if (obj) {\n      this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\n      this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\n      this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\n    }\n  }\n  ShowCardActionConfig.prototype.toJSON = function () {\n    return {\n      actionMode: Enums.ShowCardActionMode[this.actionMode],\n      inlineTopMargin: this.inlineTopMargin,\n      style: this.style\n    };\n  };\n  return ShowCardActionConfig;\n}();\nexports.ShowCardActionConfig = ShowCardActionConfig;\nvar ActionsConfig = /** @class */function () {\n  function ActionsConfig(obj) {\n    this.maxActions = 5;\n    this.spacing = Enums.Spacing.Default;\n    this.buttonSpacing = 20;\n    this.showCard = new ShowCardActionConfig();\n    this.preExpandSingleShowCardAction = false;\n    this.actionsOrientation = Enums.Orientation.Horizontal;\n    this.actionAlignment = Enums.ActionAlignment.Left;\n    this.iconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\n    this.allowTitleToWrap = false;\n    this.iconSize = 24;\n    if (obj) {\n      this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\n      this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\n      this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\n      this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\n      this.preExpandSingleShowCardAction = Utils.getBoolValue(obj[\"preExpandSingleShowCardAction\"], false);\n      this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\n      this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\n      this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\n      this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\n      try {\n        var sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\n        if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\n          this.iconSize = sizeAndUnit.physicalSize;\n        }\n      } catch (e) {\n        // Swallow this, keep default icon size\n      }\n    }\n  }\n  ActionsConfig.prototype.toJSON = function () {\n    return {\n      maxActions: this.maxActions,\n      spacing: Enums.Spacing[this.spacing],\n      buttonSpacing: this.buttonSpacing,\n      showCard: this.showCard,\n      preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\n      actionsOrientation: Enums.Orientation[this.actionsOrientation],\n      actionAlignment: Enums.ActionAlignment[this.actionAlignment]\n    };\n  };\n  return ActionsConfig;\n}();\nexports.ActionsConfig = ActionsConfig;\nvar ColorSetDefinition = /** @class */function () {\n  function ColorSetDefinition(obj) {\n    this.default = new TextColorDefinition();\n    this.dark = new TextColorDefinition();\n    this.light = new TextColorDefinition();\n    this.accent = new TextColorDefinition();\n    this.good = new TextColorDefinition();\n    this.warning = new TextColorDefinition();\n    this.attention = new TextColorDefinition();\n    this.parse(obj);\n  }\n  ColorSetDefinition.prototype.parseSingleColor = function (obj, propertyName) {\n    if (obj) {\n      this[propertyName].parse(obj[propertyName]);\n    }\n  };\n  ColorSetDefinition.prototype.parse = function (obj) {\n    if (obj) {\n      this.parseSingleColor(obj, \"default\");\n      this.parseSingleColor(obj, \"dark\");\n      this.parseSingleColor(obj, \"light\");\n      this.parseSingleColor(obj, \"accent\");\n      this.parseSingleColor(obj, \"good\");\n      this.parseSingleColor(obj, \"warning\");\n      this.parseSingleColor(obj, \"attention\");\n    }\n  };\n  return ColorSetDefinition;\n}();\nexports.ColorSetDefinition = ColorSetDefinition;\nvar ContainerStyleDefinition = /** @class */function () {\n  function ContainerStyleDefinition(obj) {\n    this.foregroundColors = new ColorSetDefinition({\n      \"default\": {\n        default: \"#333333\",\n        subtle: \"#EE333333\"\n      },\n      \"dark\": {\n        default: \"#000000\",\n        subtle: \"#66000000\"\n      },\n      \"light\": {\n        default: \"#FFFFFF\",\n        subtle: \"#33000000\"\n      },\n      \"accent\": {\n        default: \"#2E89FC\",\n        subtle: \"#882E89FC\"\n      },\n      \"good\": {\n        default: \"#54A254\",\n        subtle: \"#DD54A254\"\n      },\n      \"warning\": {\n        default: \"#E69500\",\n        subtle: \"#DDE69500\"\n      },\n      \"attention\": {\n        default: \"#CC3300\",\n        subtle: \"#DDCC3300\"\n      }\n    });\n    this.parse(obj);\n  }\n  ContainerStyleDefinition.prototype.parse = function (obj) {\n    if (obj) {\n      this.backgroundColor = obj[\"backgroundColor\"];\n      this.foregroundColors.parse(obj[\"foregroundColors\"]);\n      this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\n      this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\n    }\n  };\n  Object.defineProperty(ContainerStyleDefinition.prototype, \"isBuiltIn\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ContainerStyleDefinition;\n}();\nexports.ContainerStyleDefinition = ContainerStyleDefinition;\nvar BuiltInContainerStyleDefinition = /** @class */function (_super) {\n  __extends(BuiltInContainerStyleDefinition, _super);\n  function BuiltInContainerStyleDefinition() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(BuiltInContainerStyleDefinition.prototype, \"isBuiltIn\", {\n    get: function () {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return BuiltInContainerStyleDefinition;\n}(ContainerStyleDefinition);\nvar ContainerStyleSet = /** @class */function () {\n  function ContainerStyleSet(obj) {\n    this._allStyles = {};\n    this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\n    this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\n    if (obj) {\n      this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\n      this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\n      this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\n      this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\n      this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\n      this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\n      var customStyleArray = obj[\"customStyles\"];\n      if (customStyleArray && Array.isArray(customStyleArray)) {\n        for (var _i = 0, customStyleArray_1 = customStyleArray; _i < customStyleArray_1.length; _i++) {\n          var customStyle = customStyleArray_1[_i];\n          if (customStyle) {\n            var styleName = customStyle[\"name\"];\n            if (styleName && typeof styleName === \"string\") {\n              if (this._allStyles.hasOwnProperty(styleName)) {\n                this._allStyles[styleName].parse(customStyle[\"style\"]);\n              } else {\n                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  ContainerStyleSet.prototype.toJSON = function () {\n    var _this = this;\n    var customStyleArray = [];\n    Object.keys(this._allStyles).forEach(function (key) {\n      if (!_this._allStyles[key].isBuiltIn) {\n        customStyleArray.push({\n          name: key,\n          style: _this._allStyles[key]\n        });\n      }\n    });\n    var result = {\n      default: this.default,\n      emphasis: this.emphasis\n    };\n    if (customStyleArray.length > 0) {\n      result.customStyles = customStyleArray;\n    }\n    return result;\n  };\n  ContainerStyleSet.prototype.getStyleByName = function (name, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = null;\n    }\n    return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\n  };\n  Object.defineProperty(ContainerStyleSet.prototype, \"default\", {\n    get: function () {\n      return this._allStyles[Enums.ContainerStyle.Default];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ContainerStyleSet.prototype, \"emphasis\", {\n    get: function () {\n      return this._allStyles[Enums.ContainerStyle.Emphasis];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ContainerStyleSet;\n}();\nexports.ContainerStyleSet = ContainerStyleSet;\nvar Version = /** @class */function () {\n  function Version(major, minor, label) {\n    if (major === void 0) {\n      major = 1;\n    }\n    if (minor === void 0) {\n      minor = 1;\n    }\n    this._isValid = true;\n    this._major = major;\n    this._minor = minor;\n    this._label = label;\n  }\n  Version.parse = function (versionString, errors) {\n    if (!versionString) {\n      return null;\n    }\n    var result = new Version();\n    result._versionString = versionString;\n    var regEx = /(\\d+).(\\d+)/gi;\n    var matches = regEx.exec(versionString);\n    if (matches != null && matches.length == 3) {\n      result._major = parseInt(matches[1]);\n      result._minor = parseInt(matches[2]);\n    } else {\n      result._isValid = false;\n    }\n    if (!result._isValid && errors) {\n      errors.push({\n        error: Enums.ValidationError.InvalidPropertyValue,\n        message: \"Invalid version string: \" + result._versionString\n      });\n    }\n    return result;\n  };\n  Version.prototype.toString = function () {\n    return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\n  };\n  Version.prototype.compareTo = function (otherVersion) {\n    if (!this.isValid || !otherVersion.isValid) {\n      throw new Error(\"Cannot compare invalid version.\");\n    }\n    if (this.major > otherVersion.major) {\n      return 1;\n    } else if (this.major < otherVersion.major) {\n      return -1;\n    } else if (this.minor > otherVersion.minor) {\n      return 1;\n    } else if (this.minor < otherVersion.minor) {\n      return -1;\n    }\n    return 0;\n  };\n  Object.defineProperty(Version.prototype, \"label\", {\n    get: function () {\n      return this._label ? this._label : this.toString();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"major\", {\n    get: function () {\n      return this._major;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"minor\", {\n    get: function () {\n      return this._minor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"isValid\", {\n    get: function () {\n      return this._isValid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Version;\n}();\nexports.Version = Version;\nvar HostCapabilities = /** @class */function () {\n  function HostCapabilities() {\n    this.capabilities = null;\n  }\n  HostCapabilities.prototype.setCapability = function (name, version) {\n    if (!this.capabilities) {\n      this.capabilities = {};\n    }\n    this.capabilities[name] = version;\n  };\n  HostCapabilities.prototype.parse = function (json, errors) {\n    if (json) {\n      for (var name_1 in json) {\n        var jsonVersion = json[name_1];\n        if (typeof jsonVersion === \"string\") {\n          if (jsonVersion == \"*\") {\n            this.setCapability(name_1, \"*\");\n          } else {\n            var version = Version.parse(jsonVersion, errors);\n            if (version.isValid) {\n              this.setCapability(name_1, version);\n            }\n          }\n        }\n      }\n    }\n  };\n  HostCapabilities.prototype.hasCapability = function (name, version) {\n    if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\n      if (version == \"*\" || this.capabilities[name] == \"*\") {\n        return true;\n      }\n      return version.compareTo(this.capabilities[name]) <= 0;\n    }\n    return false;\n  };\n  HostCapabilities.prototype.areAllMet = function (hostCapabilities) {\n    if (this.capabilities) {\n      for (var capabilityName in this.capabilities) {\n        if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  return HostCapabilities;\n}();\nexports.HostCapabilities = HostCapabilities;\nvar FontTypeDefinition = /** @class */function () {\n  function FontTypeDefinition(fontFamily) {\n    this.fontFamily = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\n    this.fontSizes = {\n      small: 12,\n      default: 14,\n      medium: 17,\n      large: 21,\n      extraLarge: 26\n    };\n    this.fontWeights = {\n      lighter: 200,\n      default: 400,\n      bolder: 600\n    };\n    if (fontFamily) {\n      this.fontFamily = fontFamily;\n    }\n  }\n  FontTypeDefinition.prototype.parse = function (obj) {\n    this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\n    this.fontSizes = {\n      small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\n      default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\n      medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\n      large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\n      extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\n    };\n    this.fontWeights = {\n      lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\n      default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\n      bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\n    };\n  };\n  FontTypeDefinition.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\n  return FontTypeDefinition;\n}();\nexports.FontTypeDefinition = FontTypeDefinition;\nvar FontTypeSet = /** @class */function () {\n  function FontTypeSet(obj) {\n    this.default = new FontTypeDefinition();\n    this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\n    if (obj) {\n      this.default.parse(obj[\"default\"]);\n      this.monospace.parse(obj[\"monospace\"]);\n    }\n  }\n  FontTypeSet.prototype.getStyleDefinition = function (style) {\n    switch (style) {\n      case Enums.FontType.Monospace:\n        return this.monospace;\n      case Enums.FontType.Default:\n      default:\n        return this.default;\n    }\n  };\n  return FontTypeSet;\n}();\nexports.FontTypeSet = FontTypeSet;\nvar HostConfig = /** @class */function () {\n  function HostConfig(obj) {\n    this.hostCapabilities = new HostCapabilities();\n    this.choiceSetInputValueSeparator = \",\";\n    this.supportsInteractivity = true;\n    this.fontTypes = null;\n    this.spacing = {\n      small: 3,\n      default: 8,\n      medium: 20,\n      large: 30,\n      extraLarge: 40,\n      padding: 15\n    };\n    this.separator = {\n      lineThickness: 1,\n      lineColor: \"#EEEEEE\"\n    };\n    this.imageSizes = {\n      small: 40,\n      medium: 80,\n      large: 160\n    };\n    this.containerStyles = new ContainerStyleSet();\n    this.actions = new ActionsConfig();\n    this.adaptiveCard = new AdaptiveCardConfig();\n    this.imageSet = new ImageSetConfig();\n    this.media = new MediaConfig();\n    this.factSet = new FactSetConfig();\n    this.cssClassNamePrefix = null;\n    this.alwaysAllowBleed = false;\n    if (obj) {\n      if (typeof obj === \"string\" || obj instanceof String) {\n        obj = JSON.parse(obj);\n      }\n      this.choiceSetInputValueSeparator = obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\" ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\n      this.supportsInteractivity = obj && typeof obj[\"supportsInteractivity\"] === \"boolean\" ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\n      this._legacyFontType = new FontTypeDefinition();\n      this._legacyFontType.parse(obj);\n      if (obj.fontTypes) {\n        this.fontTypes = new FontTypeSet(obj.fontTypes);\n      }\n      if (obj.lineHeights) {\n        this.lineHeights = {\n          small: obj.lineHeights[\"small\"],\n          default: obj.lineHeights[\"default\"],\n          medium: obj.lineHeights[\"medium\"],\n          large: obj.lineHeights[\"large\"],\n          extraLarge: obj.lineHeights[\"extraLarge\"]\n        };\n      }\n      ;\n      this.imageSizes = {\n        small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\n        medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\n        large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large\n      };\n      this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\n      this.spacing = {\n        small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\n        default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\n        medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\n        large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\n        extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\n        padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\n      };\n      this.separator = {\n        lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\n        lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\n      };\n      this.actions = new ActionsConfig(obj.actions || this.actions);\n      this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\n      this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\n      this.factSet = new FactSetConfig(obj[\"factSet\"]);\n    }\n  }\n  HostConfig.prototype.getFontTypeDefinition = function (style) {\n    if (this.fontTypes) {\n      return this.fontTypes.getStyleDefinition(style);\n    } else {\n      return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\n    }\n  };\n  HostConfig.prototype.getEffectiveSpacing = function (spacing) {\n    switch (spacing) {\n      case Enums.Spacing.Small:\n        return this.spacing.small;\n      case Enums.Spacing.Default:\n        return this.spacing.default;\n      case Enums.Spacing.Medium:\n        return this.spacing.medium;\n      case Enums.Spacing.Large:\n        return this.spacing.large;\n      case Enums.Spacing.ExtraLarge:\n        return this.spacing.extraLarge;\n      case Enums.Spacing.Padding:\n        return this.spacing.padding;\n      default:\n        return 0;\n    }\n  };\n  HostConfig.prototype.paddingDefinitionToSpacingDefinition = function (paddingDefinition) {\n    return new Shared.SpacingDefinition(this.getEffectiveSpacing(paddingDefinition.top), this.getEffectiveSpacing(paddingDefinition.right), this.getEffectiveSpacing(paddingDefinition.bottom), this.getEffectiveSpacing(paddingDefinition.left));\n  };\n  HostConfig.prototype.makeCssClassNames = function () {\n    var classNames = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      classNames[_i] = arguments[_i];\n    }\n    var result = [];\n    for (var _a = 0, classNames_1 = classNames; _a < classNames_1.length; _a++) {\n      var className = classNames_1[_a];\n      result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\n    }\n    return result;\n  };\n  HostConfig.prototype.makeCssClassName = function () {\n    var classNames = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      classNames[_i] = arguments[_i];\n    }\n    var result = this.makeCssClassNames.apply(this, classNames).join(\" \");\n    return result ? result : \"\";\n  };\n  Object.defineProperty(HostConfig.prototype, \"fontFamily\", {\n    get: function () {\n      return this._legacyFontType.fontFamily;\n    },\n    set: function (value) {\n      this._legacyFontType.fontFamily = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HostConfig.prototype, \"fontSizes\", {\n    get: function () {\n      return this._legacyFontType.fontSizes;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HostConfig.prototype, \"fontWeights\", {\n    get: function () {\n      return this._legacyFontType.fontWeights;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return HostConfig;\n}();\nexports.HostConfig = HostConfig;","map":{"version":3,"mappings":"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","names":["defaultColor","subtleColor","default","subtle","ColorDefinition","obj","exports","__extends","_this","TextColorDefinition","_super","parse","highlightColors","allowCustomStyle","Enums","Size","Medium","imageSize","maxImageHeight","Utils","getNumberValue","ImageSetConfig","defaultPoster","allowInlinePlayback","MediaConfig","TextSize","Default","TextColor","TextWeight","size","parseHostConfigEnum","color","isSubtle","weight","getDefaultWeight","wrap","FactTextDefinition","Bolder","maxWidth","FactTitleDefinition","title","value","spacing","ShowCardActionMode","Inline","ContainerStyle","Emphasis","actionMode","inlineTopMargin","style","ShowCardActionConfig","Spacing","Orientation","Horizontal","ActionAlignment","Left","ActionIconPlacement","LeftOfTitle","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","getBoolValue","actionsOrientation","actionAlignment","iconPlacement","allowTitleToWrap","sizeAndUnit","Shared","SizeAndUnit","unit","SizeUnit","Pixel","iconSize","physicalSize","e","ActionsConfig","ColorSetDefinition","propertyName","parseSingleColor","ContainerStyleDefinition","backgroundColor","foregroundColors","highlightBackgroundColor","highlightForegroundColor","Object","BuiltInContainerStyleDefinition","_allStyles","Accent","Good","Attention","Warning","customStyleArray","Array","isArray","customStyleArray_1","_i","customStyle","styleName","hasOwnProperty","ContainerStyleSet","keys","forEach","key","isBuiltIn","push","name","result","emphasis","length","customStyles","defaultValue","major","minor","label","_major","_minor","_label","Version","versionString","errors","_versionString","regEx","matches","exec","parseInt","_isValid","error","ValidationError","InvalidPropertyValue","message","otherVersion","isValid","Error","toString","HostCapabilities","version","capabilities","json","name_1","jsonVersion","setCapability","compareTo","hostCapabilities","capabilityName","hasCapability","fontFamily","small","medium","large","extraLarge","lighter","bolder","FontTypeDefinition","fontSizes","fontWeights","monospace","FontTypeSet","FontType","Monospace","padding","lineThickness","lineColor","AdaptiveCardConfig","FactSetConfig","String","JSON","choiceSetInputValueSeparator","supportsInteractivity","_legacyFontType","fontTypes","lineHeights","imageSizes","containerStyles","separator","actions","adaptiveCard","imageSet","factSet","HostConfig","getStyleDefinition","Small","Large","ExtraLarge","Padding","paddingDefinition","SpacingDefinition","getEffectiveSpacing","top","right","bottom","left","classNames","classNames_1","_a","className","cssClassNamePrefix","makeCssClassNames","join"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\adaptivecards\\src\\host-config.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Shared from \"./shared\";\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class ColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(defaultColor?: string, subtleColor?: string) {\r\n        if (defaultColor) {\r\n            this.default = defaultColor;\r\n        }\r\n\r\n        if (subtleColor) {\r\n            this.subtle = subtleColor;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition extends ColorDefinition {\r\n    readonly highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.highlightColors.parse(obj[\"highlightColors\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getNumberValue(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getBoolValue(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ColorSetDefinition {\r\n    private parseSingleColor(obj: any, propertyName: string) {\r\n        if (obj) {\r\n            (this[propertyName] as TextColorDefinition).parse(obj[propertyName]);\r\n        }\r\n    }\r\n\r\n    default: TextColorDefinition = new TextColorDefinition();\r\n    dark: TextColorDefinition = new TextColorDefinition();\r\n    light: TextColorDefinition = new TextColorDefinition();\r\n    accent: TextColorDefinition = new TextColorDefinition();\r\n    good: TextColorDefinition = new TextColorDefinition();\r\n    warning: TextColorDefinition = new TextColorDefinition();\r\n    attention: TextColorDefinition = new TextColorDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.parseSingleColor(obj, \"default\");\r\n            this.parseSingleColor(obj, \"dark\");\r\n            this.parseSingleColor(obj, \"light\");\r\n            this.parseSingleColor(obj, \"accent\");\r\n            this.parseSingleColor(obj, \"good\");\r\n            this.parseSingleColor(obj, \"warning\");\r\n            this.parseSingleColor(obj, \"attention\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors: ColorSetDefinition = new ColorSetDefinition(\r\n        {\r\n            \"default\": { default: \"#333333\", subtle: \"#EE333333\" },\r\n            \"dark\": { default: \"#000000\", subtle: \"#66000000\" },\r\n            \"light\": { default: \"#FFFFFF\", subtle: \"#33000000\" },\r\n            \"accent\": { default: \"#2E89FC\", subtle: \"#882E89FC\" },\r\n            \"good\": { default: \"#54A254\", subtle: \"#DD54A254\" },\r\n            \"warning\": { default: \"#E69500\", subtle: \"#DDE69500\" },\r\n            \"attention\": { default: \"#CC3300\", subtle: \"#DDCC3300\" }\r\n        }\r\n    );\r\n\r\n    highlightBackgroundColor?: string;\r\n    highlightForegroundColor?: string;\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            this.foregroundColors.parse(obj[\"foregroundColors\"]);\r\n\r\n            this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\r\n            this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\r\n            this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\r\n            this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\r\n            this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n    private _label: string;\r\n\r\n    constructor(major: number = 1, minor: number = 1, label?: string) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n        this._label = label;\r\n    }\r\n\r\n    static parse(versionString: string, errors?: Array<IValidationError>): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        if (!result._isValid && errors) {\r\n            errors.push(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid version string: \" + result._versionString\r\n                }\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    compareTo(otherVersion: Version): number {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        }\r\n        else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        }\r\n        else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        }\r\n        else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get label(): string {\r\n        return this._label ? this._label : this.toString();\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nexport type HostCapabilityVersion = Version | \"*\";\r\nexport type HostCapabilityMap = { [key: string]: HostCapabilityVersion };\r\n\r\nexport class HostCapabilities {\r\n    private setCapability(name: string, version: HostCapabilityVersion) {\r\n        if (!this.capabilities) {\r\n            this.capabilities = { };\r\n        }\r\n\r\n        this.capabilities[name] = version;\r\n    }\r\n\r\n    capabilities: HostCapabilityMap = null;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        if (json) {\r\n            for (let name in json) {\r\n                let jsonVersion = json[name];\r\n\r\n                if (typeof jsonVersion === \"string\") {\r\n                    if (jsonVersion == \"*\") {\r\n                        this.setCapability(name, \"*\");\r\n                    }\r\n                    else {\r\n                        let version = Version.parse(jsonVersion, errors);\r\n\r\n                        if (version.isValid) {\r\n                            this.setCapability(name, version);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hasCapability(name: string, version: HostCapabilityVersion): boolean {\r\n        if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\r\n            if (version == \"*\" || this.capabilities[name] == \"*\") {\r\n                return true;\r\n            }\r\n\r\n            return version.compareTo(<Version>this.capabilities[name]) <= 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    areAllMet(hostCapabilities: HostCapabilities): boolean {\r\n        if (this.capabilities) {\r\n            for (let capabilityName in this.capabilities) {\r\n                if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface IFontSizeDefinitions {\r\n    small: number;\r\n    default: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport interface IFontWeightDefinitions {\r\n    lighter: number;\r\n    default: number;\r\n    bolder: number;\r\n}\r\n\r\nexport class FontTypeDefinition {\r\n    static readonly monospace =  new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    fontSizes: IFontSizeDefinitions = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    fontWeights: IFontWeightDefinitions = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n\r\n    constructor(fontFamily?: string) {\r\n        if (fontFamily) {\r\n            this.fontFamily = fontFamily;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n        this.fontSizes = {\r\n            small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n            default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n            medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n            large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n            extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n        };\r\n        this.fontWeights = {\r\n            lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n            default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n            bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n        };\r\n    }\r\n}\r\n\r\nexport class FontTypeSet {\r\n    default: FontTypeDefinition;\r\n    monospace: FontTypeDefinition;\r\n\r\n    constructor(obj?: any) {\r\n        this.default = new FontTypeDefinition();\r\n        this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n        if (obj) {\r\n            this.default.parse(obj[\"default\"]);\r\n            this.monospace.parse(obj[\"monospace\"]);\r\n        }\r\n    }\r\n\r\n    getStyleDefinition(style: Enums.FontType): FontTypeDefinition {\r\n        switch (style) {\r\n            case Enums.FontType.Monospace:\r\n                return this.monospace;\r\n            case Enums.FontType.Default:\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    readonly hostCapabilities = new HostCapabilities();\r\n\r\n    private _legacyFontType: FontTypeDefinition;\r\n\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n    fontTypes: FontTypeSet = null;\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n    alwaysAllowBleed: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n\r\n            this._legacyFontType = new FontTypeDefinition();\r\n            this._legacyFontType.parse(obj);\r\n\r\n            if (obj.fontTypes) {\r\n                this.fontTypes = new FontTypeSet(obj.fontTypes);\r\n            }\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getFontTypeDefinition(style?: Enums.FontType): FontTypeDefinition {\r\n        if (this.fontTypes) {\r\n            return this.fontTypes.getStyleDefinition(style);\r\n        }\r\n        else {\r\n            return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n\tpaddingDefinitionToSpacingDefinition(paddingDefinition: Shared.PaddingDefinition): Shared.SpacingDefinition {\r\n\t\treturn new Shared.SpacingDefinition(\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.top),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.right),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.bottom),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.left));\r\n    }\r\n\r\n    makeCssClassNames(...classNames: string[]): string[] {\r\n        let result: string[] = [];\r\n\r\n        for (let className of classNames) {\r\n            result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = this.makeCssClassNames(...classNames).join(\" \");\r\n\r\n        return result ? result : \"\";\r\n    }\r\n\r\n    get fontFamily(): string {\r\n        return this._legacyFontType.fontFamily;\r\n    }\r\n\r\n    set fontFamily(value: string) {\r\n        this._legacyFontType.fontFamily = value;\r\n    }\r\n\r\n    get fontSizes(): IFontSizeDefinitions {\r\n        return this._legacyFontType.fontSizes;\r\n    }\r\n\r\n    get fontWeights(): IFontWeightDefinitions {\r\n        return this._legacyFontType.fontWeights;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}