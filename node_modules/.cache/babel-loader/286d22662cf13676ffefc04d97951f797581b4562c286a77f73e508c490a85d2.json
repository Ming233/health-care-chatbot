{"ast":null,"code":"var _a;\nimport { addMonths, addYears, createDate, durationInYears, firstMonthOfYear, lastMonthOfYear } from '@progress/kendo-date-math';\nimport { Action } from '../models/NavigationAction';\nimport { getToday, isInRange, isInSelectionRange, range } from '../../utils';\nimport { EMPTY_SELECTIONRANGE } from '../models/SelectionRange';\nimport { cloneDate } from '@progress/kendo-date-math';\nvar EMPTY_DATA = [[]];\nvar CELLS_LENGTH = 4;\nvar ROWS_LENGTH = 3;\nvar upStep = function (month) {\n  if (month > 4) {\n    return -5;\n  }\n  if (month < 2) {\n    return -2;\n  }\n  return -7;\n};\nvar downStep = function (month) {\n  if (month < 7) {\n    return 5;\n  }\n  if (month < 10) {\n    return 7;\n  }\n  return 2;\n};\nvar ACTIONS = (_a = {}, _a[Action.Left] = function (date) {\n  return addMonths(date, -1);\n}, _a[Action.Up] = function (date) {\n  return addMonths(date, upStep(date.getMonth()));\n}, _a[Action.Right] = function (date) {\n  return addMonths(date, 1);\n}, _a[Action.Down] = function (date) {\n  return addMonths(date, downStep(date.getMonth()));\n}, _a[Action.PrevView] = function (date) {\n  return addYears(date, -1);\n}, _a[Action.NextView] = function (date) {\n  return addYears(date, 1);\n}, _a[Action.FirstInView] = function (date) {\n  return firstMonthOfYear(date);\n}, _a[Action.LastInView] = function (date) {\n  return lastMonthOfYear(date);\n}, _a);\n/**\n * @hidden\n */\nvar YearViewService = /** @class */function () {\n  function YearViewService(intl) {\n    this._intl = intl;\n  }\n  YearViewService.prototype.addToDate = function (min, skip) {\n    return addYears(min, skip);\n  };\n  YearViewService.prototype.datesList = function (start, count) {\n    return range(0, count).map(function (i) {\n      return addYears(start, i);\n    });\n  };\n  YearViewService.prototype.data = function (options) {\n    var _this = this;\n    var cellUID = options.cellUID,\n      focusedDate = options.focusedDate,\n      isActiveView = options.isActiveView,\n      max = options.max,\n      min = options.min,\n      selectedDate = options.selectedDate,\n      _a = options.selectionRange,\n      selectionRange = _a === void 0 ? EMPTY_SELECTIONRANGE : _a,\n      viewDate = options.viewDate;\n    if (!viewDate) {\n      return EMPTY_DATA;\n    }\n    var months = this.abbrMonthNames();\n    var firstDate = firstMonthOfYear(viewDate);\n    var lastDate = lastMonthOfYear(viewDate);\n    var currentYear = firstDate.getFullYear();\n    var cells = range(0, CELLS_LENGTH);\n    var today = getToday();\n    return range(0, ROWS_LENGTH).map(function (rowOffset) {\n      var baseDate = addMonths(firstDate, rowOffset * CELLS_LENGTH);\n      return cells.map(function (cellOffset) {\n        var cellDate = _this.normalize(addMonths(baseDate, cellOffset), min, max);\n        var changedYear = currentYear < cellDate.getFullYear();\n        if (changedYear) {\n          return null;\n        }\n        var isRangeStart = _this.isEqual(cellDate, selectionRange.start);\n        var isRangeEnd = _this.isEqual(cellDate, selectionRange.end);\n        var isInMiddle = !isRangeStart && !isRangeEnd;\n        var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n        var isSelected = isActiveView && (!Array.isArray(selectedDate) ? isInRange(selectedDate, min, max) && _this.isEqual(cellDate, selectedDate) : _this.isSelectedFromArray(cellDate, selectedDate, min, max));\n        return {\n          formattedValue: months[cellDate.getMonth()],\n          id: \"\".concat(cellUID).concat(cellDate.getTime()),\n          isFocused: _this.isEqual(cellDate, focusedDate),\n          isSelected: isSelected,\n          isInRange: isInRange(cellDate, min, max),\n          isWeekend: false,\n          isRangeStart: isRangeStart,\n          isRangeMid: isRangeMid,\n          isRangeEnd: isRangeEnd,\n          isRangeSplitEnd: isRangeMid && _this.isEqual(cellDate, lastDate),\n          isRangeSplitStart: isRangeMid && _this.isEqual(cellDate, firstDate),\n          isToday: _this.isEqual(cellDate, today),\n          title: _this.cellTitle(cellDate),\n          value: cellDate\n        };\n      });\n    });\n  };\n  YearViewService.prototype.isSelectedFromArray = function (candidate, dates, min, max) {\n    var _this = this;\n    var result = false;\n    dates.forEach(function (date) {\n      if (isInRange(candidate, min, max) && _this.isEqual(candidate, date)) {\n        result = true;\n      }\n    });\n    return result;\n  };\n  YearViewService.prototype.isEqual = function (candidate, expected) {\n    if (!candidate || !expected) {\n      return false;\n    }\n    return candidate.getFullYear() === expected.getFullYear() && candidate.getMonth() === expected.getMonth();\n  };\n  YearViewService.prototype.isInArray = function (date, dates) {\n    if (!dates.length) {\n      return false;\n    }\n    var year = date.getFullYear();\n    return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear();\n  };\n  YearViewService.prototype.isInRange = function (candidate, min, max) {\n    var candidateValue = createDate(candidate.getFullYear(), candidate.getMonth(), 1);\n    var aboveMin = !min || createDate(min.getFullYear(), min.getMonth(), 1) <= candidateValue;\n    var belowMax = !max || candidateValue <= createDate(max.getFullYear(), max.getMonth(), 1);\n    return aboveMin && belowMax;\n  };\n  YearViewService.prototype.isInSameView = function (candidate, value) {\n    return durationInYears(candidate, value) === 0;\n  };\n  YearViewService.prototype.isRangeStart = function (value) {\n    return value.getFullYear() % 10 === 0;\n  };\n  YearViewService.prototype.move = function (value, action) {\n    var modifier = ACTIONS[action];\n    if (!modifier) {\n      return value;\n    }\n    return modifier(value);\n  };\n  YearViewService.prototype.cellTitle = function (value) {\n    return \"\".concat(value.getFullYear(), \" \").concat(this.value(value));\n  };\n  YearViewService.prototype.navigationTitle = function (value) {\n    return this.title(value);\n  };\n  YearViewService.prototype.title = function (current) {\n    return current ? current.getFullYear().toString() : '';\n  };\n  YearViewService.prototype.rowLength = function (_) {\n    return CELLS_LENGTH;\n  };\n  YearViewService.prototype.skip = function (value, min) {\n    return durationInYears(min, value);\n  };\n  YearViewService.prototype.total = function (min, max) {\n    return durationInYears(min, max) + 1;\n  };\n  YearViewService.prototype.value = function (current) {\n    return current ? this.abbrMonthNames()[current.getMonth()] : '';\n  };\n  YearViewService.prototype.viewDate = function (date, max, border) {\n    if (border === void 0) {\n      border = 1;\n    }\n    var renderTwoViews = durationInYears(date, max) < border;\n    return renderTwoViews ? addYears(date, -1) : date;\n  };\n  YearViewService.prototype.abbrMonthNames = function () {\n    return this._intl.dateFormatNames({\n      nameType: 'abbreviated',\n      type: 'months'\n    });\n  };\n  YearViewService.prototype.normalize = function (cellDate, min, max) {\n    if (cellDate < min && this.isEqual(cellDate, min)) {\n      return cloneDate(min);\n    }\n    if (cellDate > max && this.isEqual(cellDate, max)) {\n      return cloneDate(max);\n    }\n    return cellDate;\n  };\n  return YearViewService;\n}();\nexport { YearViewService };","map":{"version":3,"names":["_a","addMonths","addYears","createDate","durationInYears","firstMonthOfYear","lastMonthOfYear","Action","getToday","isInRange","isInSelectionRange","range","EMPTY_SELECTIONRANGE","cloneDate","EMPTY_DATA","CELLS_LENGTH","ROWS_LENGTH","upStep","month","downStep","ACTIONS","Left","date","Up","getMonth","Right","Down","PrevView","NextView","FirstInView","LastInView","YearViewService","intl","_intl","prototype","addToDate","min","skip","datesList","start","count","map","i","data","options","_this","cellUID","focusedDate","isActiveView","max","selectedDate","selectionRange","viewDate","months","abbrMonthNames","firstDate","lastDate","currentYear","getFullYear","cells","today","rowOffset","baseDate","cellOffset","cellDate","normalize","changedYear","isRangeStart","isEqual","isRangeEnd","end","isInMiddle","isRangeMid","isSelected","Array","isArray","isSelectedFromArray","formattedValue","id","concat","getTime","isFocused","isWeekend","isRangeSplitEnd","isRangeSplitStart","isToday","title","cellTitle","value","candidate","dates","result","forEach","expected","isInArray","length","year","candidateValue","aboveMin","belowMax","isInSameView","move","action","modifier","navigationTitle","current","toString","rowLength","_","total","border","renderTwoViews","dateFormatNames","nameType","type"],"sources":["C:/Projects/health-care-chatbot/node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/YearViewService.js"],"sourcesContent":["var _a;\nimport { addMonths, addYears, createDate, durationInYears, firstMonthOfYear, lastMonthOfYear } from '@progress/kendo-date-math';\nimport { Action } from '../models/NavigationAction';\nimport { getToday, isInRange, isInSelectionRange, range } from '../../utils';\nimport { EMPTY_SELECTIONRANGE } from '../models/SelectionRange';\nimport { cloneDate } from '@progress/kendo-date-math';\nvar EMPTY_DATA = [[]];\nvar CELLS_LENGTH = 4;\nvar ROWS_LENGTH = 3;\nvar upStep = function (month) {\n    if (month > 4) {\n        return -5;\n    }\n    if (month < 2) {\n        return -2;\n    }\n    return -7;\n};\nvar downStep = function (month) {\n    if (month < 7) {\n        return 5;\n    }\n    if (month < 10) {\n        return 7;\n    }\n    return 2;\n};\nvar ACTIONS = (_a = {},\n    _a[Action.Left] = function (date) { return addMonths(date, -1); },\n    _a[Action.Up] = function (date) { return addMonths(date, upStep(date.getMonth())); },\n    _a[Action.Right] = function (date) { return addMonths(date, 1); },\n    _a[Action.Down] = function (date) { return addMonths(date, downStep(date.getMonth())); },\n    _a[Action.PrevView] = function (date) { return addYears(date, -1); },\n    _a[Action.NextView] = function (date) { return addYears(date, 1); },\n    _a[Action.FirstInView] = function (date) { return firstMonthOfYear(date); },\n    _a[Action.LastInView] = function (date) { return lastMonthOfYear(date); },\n    _a);\n/**\n * @hidden\n */\nvar YearViewService = /** @class */ (function () {\n    function YearViewService(intl) {\n        this._intl = intl;\n    }\n    YearViewService.prototype.addToDate = function (min, skip) {\n        return addYears(min, skip);\n    };\n    YearViewService.prototype.datesList = function (start, count) {\n        return range(0, count).map(function (i) { return addYears(start, i); });\n    };\n    YearViewService.prototype.data = function (options) {\n        var _this = this;\n        var cellUID = options.cellUID, focusedDate = options.focusedDate, isActiveView = options.isActiveView, max = options.max, min = options.min, selectedDate = options.selectedDate, _a = options.selectionRange, selectionRange = _a === void 0 ? EMPTY_SELECTIONRANGE : _a, viewDate = options.viewDate;\n        if (!viewDate) {\n            return EMPTY_DATA;\n        }\n        var months = this.abbrMonthNames();\n        var firstDate = firstMonthOfYear(viewDate);\n        var lastDate = lastMonthOfYear(viewDate);\n        var currentYear = firstDate.getFullYear();\n        var cells = range(0, CELLS_LENGTH);\n        var today = getToday();\n        return range(0, ROWS_LENGTH).map(function (rowOffset) {\n            var baseDate = addMonths(firstDate, rowOffset * CELLS_LENGTH);\n            return cells.map(function (cellOffset) {\n                var cellDate = _this.normalize(addMonths(baseDate, cellOffset), min, max);\n                var changedYear = currentYear < cellDate.getFullYear();\n                if (changedYear) {\n                    return null;\n                }\n                var isRangeStart = _this.isEqual(cellDate, selectionRange.start);\n                var isRangeEnd = _this.isEqual(cellDate, selectionRange.end);\n                var isInMiddle = !isRangeStart && !isRangeEnd;\n                var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n                var isSelected = isActiveView && (!Array.isArray(selectedDate)\n                    ? isInRange(selectedDate, min, max) && _this.isEqual(cellDate, selectedDate)\n                    : _this.isSelectedFromArray(cellDate, selectedDate, min, max));\n                return {\n                    formattedValue: months[cellDate.getMonth()],\n                    id: \"\".concat(cellUID).concat(cellDate.getTime()),\n                    isFocused: _this.isEqual(cellDate, focusedDate),\n                    isSelected: isSelected,\n                    isInRange: isInRange(cellDate, min, max),\n                    isWeekend: false,\n                    isRangeStart: isRangeStart,\n                    isRangeMid: isRangeMid,\n                    isRangeEnd: isRangeEnd,\n                    isRangeSplitEnd: isRangeMid && _this.isEqual(cellDate, lastDate),\n                    isRangeSplitStart: isRangeMid && _this.isEqual(cellDate, firstDate),\n                    isToday: _this.isEqual(cellDate, today),\n                    title: _this.cellTitle(cellDate),\n                    value: cellDate\n                };\n            });\n        });\n    };\n    YearViewService.prototype.isSelectedFromArray = function (candidate, dates, min, max) {\n        var _this = this;\n        var result = false;\n        dates.forEach(function (date) {\n            if (isInRange(candidate, min, max) && _this.isEqual(candidate, date)) {\n                result = true;\n            }\n        });\n        return result;\n    };\n    YearViewService.prototype.isEqual = function (candidate, expected) {\n        if (!candidate || !expected) {\n            return false;\n        }\n        return candidate.getFullYear() === expected.getFullYear() &&\n            candidate.getMonth() === expected.getMonth();\n    };\n    YearViewService.prototype.isInArray = function (date, dates) {\n        if (!dates.length) {\n            return false;\n        }\n        var year = date.getFullYear();\n        return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear();\n    };\n    YearViewService.prototype.isInRange = function (candidate, min, max) {\n        var candidateValue = createDate(candidate.getFullYear(), candidate.getMonth(), 1);\n        var aboveMin = !min || createDate(min.getFullYear(), min.getMonth(), 1) <= candidateValue;\n        var belowMax = !max || candidateValue <= createDate(max.getFullYear(), max.getMonth(), 1);\n        return aboveMin && belowMax;\n    };\n    YearViewService.prototype.isInSameView = function (candidate, value) {\n        return durationInYears(candidate, value) === 0;\n    };\n    YearViewService.prototype.isRangeStart = function (value) {\n        return value.getFullYear() % 10 === 0;\n    };\n    YearViewService.prototype.move = function (value, action) {\n        var modifier = ACTIONS[action];\n        if (!modifier) {\n            return value;\n        }\n        return modifier(value);\n    };\n    YearViewService.prototype.cellTitle = function (value) {\n        return \"\".concat(value.getFullYear(), \" \").concat(this.value(value));\n    };\n    YearViewService.prototype.navigationTitle = function (value) {\n        return this.title(value);\n    };\n    YearViewService.prototype.title = function (current) {\n        return current ? current.getFullYear().toString() : '';\n    };\n    YearViewService.prototype.rowLength = function (_) {\n        return CELLS_LENGTH;\n    };\n    YearViewService.prototype.skip = function (value, min) {\n        return durationInYears(min, value);\n    };\n    YearViewService.prototype.total = function (min, max) {\n        return durationInYears(min, max) + 1;\n    };\n    YearViewService.prototype.value = function (current) {\n        return current ? this.abbrMonthNames()[current.getMonth()] : '';\n    };\n    YearViewService.prototype.viewDate = function (date, max, border) {\n        if (border === void 0) { border = 1; }\n        var renderTwoViews = durationInYears(date, max) < border;\n        return renderTwoViews ? addYears(date, -1) : date;\n    };\n    YearViewService.prototype.abbrMonthNames = function () {\n        return this._intl.dateFormatNames({ nameType: 'abbreviated', type: 'months' });\n    };\n    YearViewService.prototype.normalize = function (cellDate, min, max) {\n        if (cellDate < min && this.isEqual(cellDate, min)) {\n            return cloneDate(min);\n        }\n        if (cellDate > max && this.isEqual(cellDate, max)) {\n            return cloneDate(max);\n        }\n        return cellDate;\n    };\n    return YearViewService;\n}());\nexport { YearViewService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}