{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar Enums = require(\"./enums\");\nvar Shared = require(\"./shared\");\nfunction generateUniqueId() {\n  return \"__ac-\" + Shared.UUID.generate();\n}\nexports.generateUniqueId = generateUniqueId;\nfunction isNullOrEmpty(value) {\n  return value === undefined || value === null || value === \"\";\n}\nexports.isNullOrEmpty = isNullOrEmpty;\nfunction appendChild(node, child) {\n  if (child != null && child != undefined) {\n    node.appendChild(child);\n  }\n}\nexports.appendChild = appendChild;\nfunction getStringValue(obj, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = undefined;\n  }\n  return typeof obj === \"string\" ? obj.toString() : defaultValue;\n}\nexports.getStringValue = getStringValue;\nfunction getNumberValue(obj, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = undefined;\n  }\n  return typeof obj === \"number\" ? obj : defaultValue;\n}\nexports.getNumberValue = getNumberValue;\nfunction getBoolValue(value, defaultValue) {\n  if (typeof value === \"boolean\") {\n    return value;\n  } else if (typeof value === \"string\") {\n    switch (value.toLowerCase()) {\n      case \"true\":\n        return true;\n      case \"false\":\n        return false;\n      default:\n        return defaultValue;\n    }\n  }\n  return defaultValue;\n}\nexports.getBoolValue = getBoolValue;\nfunction getEnumValue(targetEnum, name, defaultValue) {\n  if (isNullOrEmpty(name)) {\n    return defaultValue;\n  }\n  for (var key in targetEnum) {\n    var isValueProperty = parseInt(key, 10) >= 0;\n    if (isValueProperty) {\n      var value = targetEnum[key];\n      if (value && typeof value === \"string\") {\n        if (value.toLowerCase() === name.toLowerCase()) {\n          return parseInt(key, 10);\n        }\n      }\n    }\n  }\n  return defaultValue;\n}\nexports.getEnumValue = getEnumValue;\nfunction setProperty(target, propertyName, propertyValue, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = undefined;\n  }\n  if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\n    delete target[propertyName];\n  } else {\n    target[propertyName] = propertyValue;\n  }\n}\nexports.setProperty = setProperty;\nfunction setNumberProperty(target, propertyName, propertyValue, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = undefined;\n  }\n  if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue || isNaN(propertyValue)) {\n    delete target[propertyName];\n  } else {\n    target[propertyName] = propertyValue;\n  }\n}\nexports.setNumberProperty = setNumberProperty;\nfunction setEnumProperty(enumType, target, propertyName, propertyValue, defaultValue) {\n  if (defaultValue === void 0) {\n    defaultValue = undefined;\n  }\n  var targetValue = target[propertyName];\n  var canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\n  if (propertyValue == defaultValue) {\n    if (canDeleteTarget) {\n      delete target[propertyName];\n    }\n  } else {\n    if (propertyValue == undefined) {\n      if (canDeleteTarget) {\n        delete target[propertyName];\n      }\n    } else {\n      target[propertyName] = enumType[propertyValue];\n    }\n  }\n}\nexports.setEnumProperty = setEnumProperty;\nfunction setArrayProperty(target, propertyName, propertyValue) {\n  var items = [];\n  if (propertyValue) {\n    for (var _i = 0, propertyValue_1 = propertyValue; _i < propertyValue_1.length; _i++) {\n      var item = propertyValue_1[_i];\n      items.push(item.toJSON());\n    }\n  }\n  if (items.length == 0) {\n    if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\n      delete target[propertyName];\n    }\n  } else {\n    setProperty(target, propertyName, items);\n  }\n}\nexports.setArrayProperty = setArrayProperty;\nfunction parseHostConfigEnum(targetEnum, value, defaultValue) {\n  if (typeof value === \"string\") {\n    return getEnumValue(targetEnum, value, defaultValue);\n  } else if (typeof value === \"number\") {\n    return value;\n  } else {\n    return defaultValue;\n  }\n}\nexports.parseHostConfigEnum = parseHostConfigEnum;\nfunction renderSeparation(hostConfig, separationDefinition, orientation) {\n  if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\n    var separator = document.createElement(\"div\");\n    separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\n    if (orientation == Enums.Orientation.Horizontal) {\n      if (separationDefinition.lineThickness) {\n        separator.style.paddingTop = separationDefinition.spacing / 2 + \"px\";\n        separator.style.marginBottom = separationDefinition.spacing / 2 + \"px\";\n        separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\n      } else {\n        separator.style.height = separationDefinition.spacing + \"px\";\n      }\n    } else {\n      if (separationDefinition.lineThickness) {\n        separator.style.paddingLeft = separationDefinition.spacing / 2 + \"px\";\n        separator.style.marginRight = separationDefinition.spacing / 2 + \"px\";\n        separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\n      } else {\n        separator.style.width = separationDefinition.spacing + \"px\";\n      }\n    }\n    separator.style.overflow = \"hidden\";\n    return separator;\n  } else {\n    return null;\n  }\n}\nexports.renderSeparation = renderSeparation;\nfunction stringToCssColor(color) {\n  var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\n  var matches = regEx.exec(color);\n  if (matches && matches[4]) {\n    var a = parseInt(matches[1], 16) / 255;\n    var r = parseInt(matches[2], 16);\n    var g = parseInt(matches[3], 16);\n    var b = parseInt(matches[4], 16);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n  } else {\n    return color;\n  }\n}\nexports.stringToCssColor = stringToCssColor;\nfunction truncate(element, maxHeight, lineHeight) {\n  var fits = function () {\n    // Allow a one pixel overflow to account for rounding differences\n    // between browsers\n    return maxHeight - element.scrollHeight >= -1.0;\n  };\n  if (fits()) return;\n  var fullText = element.innerHTML;\n  var truncateAt = function (idx) {\n    element.innerHTML = fullText.substring(0, idx) + '...';\n  };\n  var breakableIndices = findBreakableIndices(fullText);\n  var lo = 0;\n  var hi = breakableIndices.length;\n  var bestBreakIdx = 0;\n  // Do a binary search for the longest string that fits\n  while (lo < hi) {\n    var mid = Math.floor((lo + hi) / 2);\n    truncateAt(breakableIndices[mid]);\n    if (fits()) {\n      bestBreakIdx = breakableIndices[mid];\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n  truncateAt(bestBreakIdx);\n  // If we have extra room, try to expand the string letter by letter\n  // (covers the case where we have to break in the middle of a long word)\n  if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\n    var idx = findNextCharacter(fullText, bestBreakIdx);\n    while (idx < fullText.length) {\n      truncateAt(idx);\n      if (fits()) {\n        bestBreakIdx = idx;\n        idx = findNextCharacter(fullText, idx);\n      } else {\n        break;\n      }\n    }\n    truncateAt(bestBreakIdx);\n  }\n}\nexports.truncate = truncate;\nfunction findBreakableIndices(html) {\n  var results = [];\n  var idx = findNextCharacter(html, -1);\n  while (idx < html.length) {\n    if (html[idx] == ' ') {\n      results.push(idx);\n    }\n    idx = findNextCharacter(html, idx);\n  }\n  return results;\n}\nfunction findNextCharacter(html, currIdx) {\n  currIdx += 1;\n  // If we found the start of an HTML tag, keep advancing until we get\n  // past it, so we don't end up truncating in the middle of the tag\n  while (currIdx < html.length && html[currIdx] == '<') {\n    while (currIdx < html.length && html[currIdx++] != '>');\n  }\n  return currIdx;\n}\nfunction getFitStatus(element, containerEnd) {\n  var start = element.offsetTop;\n  var end = start + element.clientHeight;\n  if (end <= containerEnd) {\n    return Enums.ContainerFitStatus.FullyInContainer;\n  } else if (start < containerEnd) {\n    return Enums.ContainerFitStatus.Overflowing;\n  } else {\n    return Enums.ContainerFitStatus.FullyOutOfContainer;\n  }\n}\nexports.getFitStatus = getFitStatus;","map":{"version":3,"mappings":"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","names":["generateUniqueId","Shared","UUID","generate","exports","isNullOrEmpty","value","undefined","appendChild","node","child","getStringValue","obj","defaultValue","toString","getNumberValue","getBoolValue","toLowerCase","getEnumValue","targetEnum","name","key","isValueProperty","parseInt","setProperty","target","propertyName","propertyValue","setNumberProperty","isNaN","setEnumProperty","enumType","targetValue","canDeleteTarget","setArrayProperty","items","propertyValue_1","_i","item","push","toJSON","length","hasOwnProperty","Array","isArray","parseHostConfigEnum","renderSeparation","hostConfig","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","className","makeCssClassName","Enums","Orientation","Horizontal","style","paddingTop","marginBottom","borderBottom","stringToCssColor","lineColor","height","paddingLeft","marginRight","borderRight","width","overflow","color","regEx","matches","exec","a","r","g","b","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","findBreakableIndices","lo","hi","bestBreakIdx","mid","Math","floor","findNextCharacter","html","results","currIdx","getFitStatus","containerEnd","start","offsetTop","end","clientHeight","ContainerFitStatus","FullyInContainer","Overflowing","FullyOutOfContainer"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\adaptivecards\\src\\utils.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport { HostConfig } from \"./host-config\";\r\n\r\nexport function generateUniqueId(): string {\r\n    return \"__ac-\" + Shared.UUID.generate();\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function getStringValue(obj: any, defaultValue: string = undefined): string {\r\n    return typeof obj === \"string\" ? obj.toString() : defaultValue;\r\n}\r\n\r\nexport function getNumberValue(obj: any, defaultValue: number = undefined): number {\r\n    return typeof obj === \"number\" ? obj : defaultValue;\r\n}\r\n\r\nexport function getBoolValue(value: any, defaultValue: boolean): boolean {\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        switch (value.toLowerCase()) {\r\n            case \"true\":\r\n                return true;\r\n            case \"false\":\r\n                return false;\r\n            default:\r\n                return defaultValue;\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function getEnumValue(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function setProperty(target: object, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setNumberProperty(target: object, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue || isNaN(propertyValue)) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: object, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    let targetValue = target[propertyName];\r\n\r\n    let canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\r\n\r\n    if (propertyValue == defaultValue) {\r\n        if (canDeleteTarget) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        if (propertyValue == undefined) {\r\n            if (canDeleteTarget) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            target[propertyName] = enumType[propertyValue];\r\n        }\r\n    }\r\n}\r\n\r\nexport function setArrayProperty(target: object, propertyName: string, propertyValue: any[]) {\r\n    let items = [];\r\n\r\n    if (propertyValue) {\r\n        for (let item of propertyValue) {\r\n            items.push(item.toJSON());\r\n        }\r\n    }\r\n\r\n    if (items.length == 0) {\r\n        if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        setProperty(target, propertyName, items);\r\n    }\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValue(targetEnum, value, defaultValue);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return value;\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(hostConfig: HostConfig, separationDefinition: Shared.ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        let separator = document.createElement(\"div\");\r\n        separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginBottom = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginRight = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n    maxHeight: number,\r\n    lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}