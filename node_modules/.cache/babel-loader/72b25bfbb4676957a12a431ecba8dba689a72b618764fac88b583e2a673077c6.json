{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = function (_super) {\n  __extends(ScalarObservable, _super);\n  function ScalarObservable(value, scheduler) {\n    _super.call(this);\n    this.value = value;\n    this.scheduler = scheduler;\n    this._isScalar = true;\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n  ScalarObservable.create = function (value, scheduler) {\n    return new ScalarObservable(value, scheduler);\n  };\n  ScalarObservable.dispatch = function (state) {\n    var done = state.done,\n      value = state.value,\n      subscriber = state.subscriber;\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n    state.done = true;\n    this.schedule(state);\n  };\n  /** @deprecated internal use only */\n  ScalarObservable.prototype._subscribe = function (subscriber) {\n    var value = this.value;\n    var scheduler = this.scheduler;\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false,\n        value: value,\n        subscriber: subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  };\n  return ScalarObservable;\n}(Observable_1.Observable);\nexports.ScalarObservable = ScalarObservable;","map":{"version":3,"mappings":";;;;;;;;;AACA,2BAA2B,eAAe,CAAC;AAI3C;;;;;AAKA;EAAyCA;EAwBvC,0BAAmBC,KAAQ,EAAUC,SAAsB;IACzDC,iBAAO;IADU,UAAK,GAALF,KAAK;IAAa,cAAS,GAATC,SAAS;IAF9C,cAAS,GAAY,IAAI;IAIvB,IAAIA,SAAS,EAAE;MACb,IAAI,CAACE,SAAS,GAAG,KAAK;IACxB;EACF;EA5BOC,uBAAM,GAAb,UAAiBJ,KAAQ,EAAEC,SAAsB;IAC/C,OAAO,IAAIG,gBAAgB,CAACJ,KAAK,EAAEC,SAAS,CAAC;EAC/C,CAAC;EAEMG,yBAAQ,GAAf,UAAgBC,KAAU;IAChB,qBAAI;MAAEL,mBAAK;MAAEM,6BAAU;IAE/B,IAAIC,IAAI,EAAE;MACRD,UAAU,CAACE,QAAQ,EAAE;MACrB;IACF;IAEAF,UAAU,CAACG,IAAI,CAACT,KAAK,CAAC;IACtB,IAAIM,UAAU,CAACI,MAAM,EAAE;MACrB;IACF;IAEAL,KAAK,CAACE,IAAI,GAAG,IAAI;IACV,IAAK,CAACI,QAAQ,CAACN,KAAK,CAAC;EAC9B,CAAC;EAWD;EAAqCD,qCAAU,GAAV,UAAWE,UAAyB;IACvE,IAAMN,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAMC,SAAS,GAAG,IAAI,CAACA,SAAS;IAEhC,IAAIA,SAAS,EAAE;MACb,OAAOA,SAAS,CAACU,QAAQ,CAACP,gBAAgB,CAACQ,QAAQ,EAAE,CAAC,EAAE;QACtDL,IAAI,EAAE,KAAK;QAAEP,YAAK;QAAEM;OACrB,CAAC;IACJ,CAAC,MAAM;MACLA,UAAU,CAACG,IAAI,CAACT,KAAK,CAAC;MACtB,IAAI,CAACM,UAAU,CAACI,MAAM,EAAE;QACtBJ,UAAU,CAACE,QAAQ,EAAE;MACvB;IACF;EACF,CAAC;EACH,uBAAC;AAAD,CAAC,CA9CwCK,uBAAU;AAAtCC,wBAAgB,mBA8C5B","names":["__extends","value","scheduler","_super","_isScalar","ScalarObservable","state","subscriber","done","complete","next","closed","schedule","dispatch","Observable_1","exports"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\src\\observable\\ScalarObservable.ts"],"sourcesContent":["import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}