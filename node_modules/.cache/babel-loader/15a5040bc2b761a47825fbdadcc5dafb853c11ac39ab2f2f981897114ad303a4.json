{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar Enums = require(\"./enums\");\nvar GlobalSettings = /** @class */function () {\n  function GlobalSettings() {}\n  GlobalSettings.setTabIndexAtCardRoot = true;\n  return GlobalSettings;\n}();\nexports.GlobalSettings = GlobalSettings;\nexports.ContentTypes = {\n  applicationJson: \"application/json\",\n  applicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\n};\nvar StringWithSubstitutions = /** @class */function () {\n  function StringWithSubstitutions() {\n    this._isProcessed = false;\n    this._original = null;\n    this._processed = null;\n  }\n  StringWithSubstitutions.prototype.getReferencedInputs = function (inputs, referencedInputs) {\n    if (!referencedInputs) {\n      throw new Error(\"The referencedInputs parameter cannot be null.\");\n    }\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n      var input = inputs_1[_i];\n      var matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\n      if (matches != null) {\n        referencedInputs[input.id] = input;\n      }\n    }\n  };\n  StringWithSubstitutions.prototype.substituteInputValues = function (inputs, contentType) {\n    this._processed = this._original;\n    var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\n    var matches;\n    while ((matches = regEx.exec(this._original)) != null) {\n      var matchedInput = null;\n      for (var _i = 0, _a = Object.keys(inputs); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (key.toLowerCase() == matches[1].toLowerCase()) {\n          matchedInput = inputs[key];\n          break;\n        }\n      }\n      if (matchedInput) {\n        var valueForReplace = \"\";\n        if (matchedInput.value) {\n          valueForReplace = matchedInput.value;\n        }\n        if (contentType === exports.ContentTypes.applicationJson) {\n          valueForReplace = JSON.stringify(valueForReplace);\n          valueForReplace = valueForReplace.slice(1, -1);\n        } else if (contentType === exports.ContentTypes.applicationXWwwFormUrlencoded) {\n          valueForReplace = encodeURIComponent(valueForReplace);\n        }\n        this._processed = this._processed.replace(matches[0], valueForReplace);\n      }\n    }\n    ;\n    this._isProcessed = true;\n  };\n  StringWithSubstitutions.prototype.getOriginal = function () {\n    return this._original;\n  };\n  StringWithSubstitutions.prototype.get = function () {\n    if (!this._isProcessed) {\n      return this._original;\n    } else {\n      return this._processed;\n    }\n  };\n  StringWithSubstitutions.prototype.set = function (value) {\n    this._original = value;\n    this._isProcessed = false;\n  };\n  return StringWithSubstitutions;\n}();\nexports.StringWithSubstitutions = StringWithSubstitutions;\nvar SpacingDefinition = /** @class */function () {\n  function SpacingDefinition(top, right, bottom, left) {\n    if (top === void 0) {\n      top = 0;\n    }\n    if (right === void 0) {\n      right = 0;\n    }\n    if (bottom === void 0) {\n      bottom = 0;\n    }\n    if (left === void 0) {\n      left = 0;\n    }\n    this.left = 0;\n    this.top = 0;\n    this.right = 0;\n    this.bottom = 0;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n  return SpacingDefinition;\n}();\nexports.SpacingDefinition = SpacingDefinition;\nvar PaddingDefinition = /** @class */function () {\n  function PaddingDefinition(top, right, bottom, left) {\n    if (top === void 0) {\n      top = Enums.Spacing.None;\n    }\n    if (right === void 0) {\n      right = Enums.Spacing.None;\n    }\n    if (bottom === void 0) {\n      bottom = Enums.Spacing.None;\n    }\n    if (left === void 0) {\n      left = Enums.Spacing.None;\n    }\n    this.top = Enums.Spacing.None;\n    this.right = Enums.Spacing.None;\n    this.bottom = Enums.Spacing.None;\n    this.left = Enums.Spacing.None;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n  return PaddingDefinition;\n}();\nexports.PaddingDefinition = PaddingDefinition;\nvar SizeAndUnit = /** @class */function () {\n  function SizeAndUnit(physicalSize, unit) {\n    this.physicalSize = physicalSize;\n    this.unit = unit;\n  }\n  SizeAndUnit.parse = function (input, requireUnitSpecifier) {\n    if (requireUnitSpecifier === void 0) {\n      requireUnitSpecifier = false;\n    }\n    var result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\n    if (typeof input === \"number\") {\n      result.physicalSize = input;\n      return result;\n    } else if (typeof input === \"string\") {\n      var regExp = /^([0-9]+)(px|\\*)?$/g;\n      var matches = regExp.exec(input);\n      var expectedMatchCount = requireUnitSpecifier ? 3 : 2;\n      if (matches && matches.length >= expectedMatchCount) {\n        result.physicalSize = parseInt(matches[1]);\n        if (matches.length == 3) {\n          if (matches[2] == \"px\") {\n            result.unit = Enums.SizeUnit.Pixel;\n          }\n        }\n        return result;\n      }\n    }\n    throw new Error(\"Invalid size: \" + input);\n  };\n  return SizeAndUnit;\n}();\nexports.SizeAndUnit = SizeAndUnit;\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\nvar UUID = /** @class */function () {\n  function UUID() {}\n  UUID.generate = function () {\n    var d0 = Math.random() * 0xffffffff | 0;\n    var d1 = Math.random() * 0xffffffff | 0;\n    var d2 = Math.random() * 0xffffffff | 0;\n    var d3 = Math.random() * 0xffffffff | 0;\n    return UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' + UUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' + UUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] + UUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\n  };\n  UUID.initialize = function () {\n    for (var i = 0; i < 256; i++) {\n      UUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n    }\n  };\n  UUID.lut = [];\n  return UUID;\n}();\nexports.UUID = UUID;\nUUID.initialize();","map":{"version":3,"mappings":";;;;;AAAA;AACA;AACA;AAEA;EAAA,2BAEA;EADWA,oCAAqB,GAAY,IAAI;EAChD,qBAAC;CAAA,EAFD;AAAaC;AAIAA,oBAAY,GAAG;EAC3BC,eAAe,EAAE,kBAAkB;EACnCC,6BAA6B,EAAE;CAC/B;AAgBD;EAAA;IACS,iBAAY,GAAY,KAAK;IAC7B,cAAS,GAAW,IAAI;IACrB,eAAU,GAAW,IAAI;EAuErC;EArEIC,qDAAmB,GAAnB,UAAoBC,MAAgB,EAAEC,gBAAoC;IACtE,IAAI,CAACA,gBAAgB,EAAE;MACnB,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;;IAGrE,KAAkB,UAAM,EAANC,iBAAM,EAANC,oBAAM,EAANA,IAAM,EAAE;MAArB,IAAIC,KAAK;MACV,IAAIC,OAAO,GAAG,IAAIC,MAAM,CAAC,SAAS,GAAGF,KAAK,CAACG,EAAE,GAAG,eAAe,EAAE,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC;MAE3F,IAAIJ,OAAO,IAAI,IAAI,EAAE;QACjBL,gBAAgB,CAACI,KAAK,CAACG,EAAE,CAAC,GAAGH,KAAK;;;EAG9C,CAAC;EAEJN,uDAAqB,GAArB,UAAsBC,MAA0B,EAAEW,WAAmB;IACpE,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,SAAS;IAEhC,IAAIG,KAAK,GAAG,kCAAkC;IAC9C,IAAIP,OAAO;IAEX,OAAO,CAACA,OAAO,GAAGO,KAAK,CAACJ,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,KAAK,IAAI,EAAE;MACtD,IAAII,YAAY,GAAW,IAAI;MAE/B,KAAgB,UAAmB,EAAnBC,WAAM,CAACC,IAAI,CAAChB,MAAM,CAAC,EAAnBI,cAAmB,EAAnBA,IAAmB,EAAE;QAAhC,IAAIa,GAAG;QACX,IAAIA,GAAG,CAACC,WAAW,EAAE,IAAIZ,OAAO,CAAC,CAAC,CAAC,CAACY,WAAW,EAAE,EAAE;UAClDJ,YAAY,GAAGd,MAAM,CAACiB,GAAG,CAAC;UAC1B;;;MAIO,IAAIH,YAAY,EAAE;QAC1B,IAAIK,eAAe,GAAG,EAAE;QAExB,IAAIL,YAAY,CAACM,KAAK,EAAE;UACvBD,eAAe,GAAGL,YAAY,CAACM,KAAK;;QAGrC,IAAIT,WAAW,KAAKf,oBAAY,CAACC,eAAe,EAAE;UACjDsB,eAAe,GAAGE,IAAI,CAACC,SAAS,CAACH,eAAe,CAAC;UACjDA,eAAe,GAAGA,eAAe,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9C,MACI,IAAIZ,WAAW,KAAKf,oBAAY,CAACE,6BAA6B,EAAE;UACpEqB,eAAe,GAAGK,kBAAkB,CAACL,eAAe,CAAC;;QAGtD,IAAI,CAACP,UAAU,GAAG,IAAI,CAACA,UAAU,CAACa,OAAO,CAACnB,OAAO,CAAC,CAAC,CAAC,EAAEa,eAAe,CAAC;;;IAEvE;IAED,IAAI,CAACO,YAAY,GAAG,IAAI;EACzB,CAAC;EAED3B,6CAAW,GAAX;IACC,OAAO,IAAI,CAACW,SAAS;EACtB,CAAC;EAEDX,qCAAG,GAAH;IACC,IAAI,CAAC,IAAI,CAAC2B,YAAY,EAAE;MACvB,OAAO,IAAI,CAAChB,SAAS;KACrB,MACI;MACJ,OAAO,IAAI,CAACE,UAAU;;EAExB,CAAC;EAEDb,qCAAG,GAAH,UAAIqB,KAAa;IAChB,IAAI,CAACV,SAAS,GAAGU,KAAK;IACtB,IAAI,CAACM,YAAY,GAAG,KAAK;EAC1B,CAAC;EACF,8BAAC;AAAD,CAAC,EA1ED;AAAa9B;AA4Eb;EAMC,2BAAY+B,GAAe,EAC1BC,KAAiB,EACjBC,MAAkB,EAClBC,IAAgB;IAHL;MAAAH,OAAe;IAAA;IAC1B;MAAAC,SAAiB;IAAA;IACjB;MAAAC,UAAkB;IAAA;IAClB;MAAAC,QAAgB;IAAA;IARjB,SAAI,GAAW,CAAC;IAChB,QAAG,GAAW,CAAC;IACf,UAAK,GAAW,CAAC;IACjB,WAAM,GAAW,CAAC;IAMjB,IAAI,CAACH,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACjB;EACD,wBAAC;AAAD,CAAC,EAfD;AAAalC;AAiBb;EAMC,2BAAY+B,GAAuC,EAClDC,KAAyC,EACzCC,MAA0C,EAC1CC,IAAwC;IAH7B;MAAAH,MAAqBI,KAAK,CAACC,OAAO,CAACC,IAAI;IAAA;IAClD;MAAAL,QAAuBG,KAAK,CAACC,OAAO,CAACC,IAAI;IAAA;IACzC;MAAAJ,SAAwBE,KAAK,CAACC,OAAO,CAACC,IAAI;IAAA;IAC1C;MAAAH,OAAsBC,KAAK,CAACC,OAAO,CAACC,IAAI;IAAA;IARzC,QAAG,GAAkBF,KAAK,CAACC,OAAO,CAACC,IAAI;IACvC,UAAK,GAAkBF,KAAK,CAACC,OAAO,CAACC,IAAI;IACzC,WAAM,GAAkBF,KAAK,CAACC,OAAO,CAACC,IAAI;IAC1C,SAAI,GAAkBF,KAAK,CAACC,OAAO,CAACC,IAAI;IAMvC,IAAI,CAACN,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACjB;EACD,wBAAC;AAAD,CAAC,EAfD;AAAalC;AAiBb;EAiCC,qBAAYsC,YAAoB,EAAEC,IAAoB;IACrD,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,IAAI,GAAGA,IAAI;EACjB;EAhCOC,iBAAK,GAAZ,UAAa/B,KAAU,EAAEgC,oBAAqC;IAArC;MAAAA,4BAAqC;IAAA;IAC7D,IAAIC,MAAM,GAAG,IAAIF,WAAW,CAAC,CAAC,EAAEL,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAAC;IAEhD,IAAI,OAAOnC,KAAK,KAAK,QAAQ,EAAE;MAC3BiC,MAAM,CAACJ,YAAY,GAAG7B,KAAK;MAE3B,OAAOiC,MAAM;KAChB,MACI,IAAI,OAAOjC,KAAK,KAAK,QAAQ,EAAE;MAChC,IAAIoC,MAAM,GAAG,qBAAqB;MAClC,IAAInC,OAAO,GAAGmC,MAAM,CAAChC,IAAI,CAACJ,KAAK,CAAC;MAChC,IAAIqC,kBAAkB,GAAGL,oBAAoB,GAAG,CAAC,GAAG,CAAC;MAErD,IAAI/B,OAAO,IAAIA,OAAO,CAACqC,MAAM,IAAID,kBAAkB,EAAE;QACjDJ,MAAM,CAACJ,YAAY,GAAGU,QAAQ,CAACtC,OAAO,CAAC,CAAC,CAAC,CAAC;QAE1C,IAAIA,OAAO,CAACqC,MAAM,IAAI,CAAC,EAAE;UACrB,IAAIrC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;YACpBgC,MAAM,CAACH,IAAI,GAAGJ,KAAK,CAACQ,QAAQ,CAACM,KAAK;;;QAI1C,OAAOP,MAAM;;;IAI3B,MAAM,IAAIpC,KAAK,CAAC,gBAAgB,GAAGG,KAAK,CAAC;EAC1C,CAAC;EAMF,kBAAC;AAAD,CAAC,EArCD;AAAaT;AA4Cb;;;;;;AAMA;EAAA,iBAoBA;EAjBQkD,aAAQ,GAAf;IACC,IAAIC,EAAE,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IACvC,IAAIC,EAAE,GAAGF,IAAI,CAACC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IACvC,IAAIE,EAAE,GAAGH,IAAI,CAACC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IACvC,IAAIG,EAAE,GAAGJ,IAAI,CAACC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;IAEvC,OAAOH,IAAI,CAACO,GAAG,CAACN,EAAE,GAAG,IAAI,CAAC,GAAGD,IAAI,CAACO,GAAG,CAACN,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAGD,IAAI,CAACO,GAAG,CAACN,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAGD,IAAI,CAACO,GAAG,CAACN,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GAClHD,IAAI,CAACO,GAAG,CAACH,EAAE,GAAG,IAAI,CAAC,GAAGJ,IAAI,CAACO,GAAG,CAACH,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAGJ,IAAI,CAACO,GAAG,CAACH,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAGJ,IAAI,CAACO,GAAG,CAACH,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,GACzHJ,IAAI,CAACO,GAAG,CAACF,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAGL,IAAI,CAACO,GAAG,CAACF,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,GAAGL,IAAI,CAACO,GAAG,CAACF,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAGL,IAAI,CAACO,GAAG,CAACF,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GACnHL,IAAI,CAACO,GAAG,CAACD,EAAE,GAAG,IAAI,CAAC,GAAGN,IAAI,CAACO,GAAG,CAACD,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAGN,IAAI,CAACO,GAAG,CAACD,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAGN,IAAI,CAACO,GAAG,CAACD,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;EACxG,CAAC;EAEMN,eAAU,GAAjB;IACC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;MAC7BR,IAAI,CAACO,GAAG,CAACC,CAAC,CAAC,GAAG,CAACA,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAIA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;;EAEpD,CAAC;EAlBcT,QAAG,GAAG,EAAE;EAmBxB,WAAC;CAAA,EApBD;AAAalD;AAsBbkD,IAAI,CAACU,UAAU,EAAE","names":["GlobalSettings","exports","applicationJson","applicationXWwwFormUrlencoded","StringWithSubstitutions","inputs","referencedInputs","Error","inputs_1","_i","input","matches","RegExp","id","exec","_original","contentType","_processed","regEx","matchedInput","_a","keys","key","toLowerCase","valueForReplace","value","JSON","stringify","slice","encodeURIComponent","replace","_isProcessed","top","right","bottom","left","Enums","Spacing","None","physicalSize","unit","SizeAndUnit","requireUnitSpecifier","result","SizeUnit","Weight","regExp","expectedMatchCount","length","parseInt","Pixel","UUID","d0","Math","random","d1","d2","d3","lut","i","toString","initialize"],"sources":["C:\\Projects\\health-care-chatbot\\node_modules\\adaptivecards\\src\\shared.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\n\r\nexport class GlobalSettings {\r\n    static setTabIndexAtCardRoot: boolean = true;\r\n}\r\n\r\nexport const ContentTypes = {\r\n\tapplicationJson: \"application/json\",\r\n\tapplicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n\tspacing: number,\r\n\tlineThickness?: number,\r\n\tlineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n\tid: string;\r\n    value: string;\r\n    validateValue(): boolean;\r\n}\r\n\r\nexport type Dictionary<T> = { [key: string]: T };\r\n\r\nexport class StringWithSubstitutions {\r\n\tprivate _isProcessed: boolean = false;\r\n\tprivate _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\r\n        if (!referencedInputs) {\r\n            throw new Error(\"The referencedInputs parameter cannot be null.\")\r\n        }\r\n\r\n        for (let input of inputs) {\r\n            let matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\r\n\r\n            if (matches != null) {\r\n                referencedInputs[input.id] = input;\r\n            }\r\n        }\r\n    }\r\n\r\n\tsubstituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\r\n\t\tthis._processed = this._original;\r\n\r\n\t\tlet regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n\t\tlet matches;\r\n\r\n\t\twhile ((matches = regEx.exec(this._original)) != null) {\r\n\t\t\tlet matchedInput: IInput = null;\r\n\r\n\t\t\tfor (let key of Object.keys(inputs)) {\r\n\t\t\t\tif (key.toLowerCase() == matches[1].toLowerCase()) {\r\n\t\t\t\t\tmatchedInput = inputs[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n            }\r\n\r\n            if (matchedInput) {\r\n\t\t\t\tvar valueForReplace = \"\";\r\n\r\n\t\t\t\tif (matchedInput.value) {\r\n\t\t\t\t\tvalueForReplace = matchedInput.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (contentType === ContentTypes.applicationJson) {\r\n\t\t\t\t\tvalueForReplace = JSON.stringify(valueForReplace);\r\n\t\t\t\t\tvalueForReplace = valueForReplace.slice(1, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n\t\t\t\t\tvalueForReplace = encodeURIComponent(valueForReplace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._processed = this._processed.replace(matches[0], valueForReplace);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._isProcessed = true;\r\n\t}\r\n\r\n\tgetOriginal(): string {\r\n\t\treturn this._original;\r\n\t}\r\n\r\n\tget(): string {\r\n\t\tif (!this._isProcessed) {\r\n\t\t\treturn this._original;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._processed;\r\n\t\t}\r\n\t}\r\n\r\n\tset(value: string) {\r\n\t\tthis._original = value;\r\n\t\tthis._isProcessed = false;\r\n\t}\r\n}\r\n\r\nexport class SpacingDefinition {\r\n\tleft: number = 0;\r\n\ttop: number = 0;\r\n\tright: number = 0;\r\n\tbottom: number = 0;\r\n\r\n\tconstructor(top: number = 0,\r\n\t\tright: number = 0,\r\n\t\tbottom: number = 0,\r\n\t\tleft: number = 0) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class PaddingDefinition {\r\n\ttop: Enums.Spacing = Enums.Spacing.None;\r\n\tright: Enums.Spacing = Enums.Spacing.None;\r\n\tbottom: Enums.Spacing = Enums.Spacing.None;\r\n\tleft: Enums.Spacing = Enums.Spacing.None;\r\n\r\n\tconstructor(top: Enums.Spacing = Enums.Spacing.None,\r\n\t\tright: Enums.Spacing = Enums.Spacing.None,\r\n\t\tbottom: Enums.Spacing = Enums.Spacing.None,\r\n\t\tleft: Enums.Spacing = Enums.Spacing.None) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class SizeAndUnit {\r\n\tphysicalSize: number;\r\n\tunit: Enums.SizeUnit;\r\n\r\n\tstatic parse(input: any, requireUnitSpecifier: boolean = false): SizeAndUnit {\r\n\t\tlet result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n        if (typeof input === \"number\") {\r\n            result.physicalSize = input;\r\n\r\n            return result;\r\n        }\r\n        else if (typeof input === \"string\") {\r\n            let regExp = /^([0-9]+)(px|\\*)?$/g;\r\n            let matches = regExp.exec(input);\r\n            let expectedMatchCount = requireUnitSpecifier ? 3 : 2;\r\n\r\n            if (matches && matches.length >= expectedMatchCount) {\r\n                result.physicalSize = parseInt(matches[1]);\r\n\r\n                if (matches.length == 3) {\r\n                    if (matches[2] == \"px\") {\r\n                        result.unit = Enums.SizeUnit.Pixel;\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n\t\tthrow new Error(\"Invalid size: \" + input);\r\n\t}\r\n\r\n\tconstructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n\t\tthis.physicalSize = physicalSize;\r\n\t\tthis.unit = unit;\r\n\t}\r\n}\r\n\r\nexport interface IResourceInformation {\r\n\turl: string;\r\n\tmimeType: string;\r\n}\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n\tprivate static lut = [];\r\n\r\n\tstatic generate(): string {\r\n\t\tlet d0 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d1 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d2 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d3 = Math.random() * 0xffffffff | 0;\r\n\r\n\t\treturn UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n\t\t\tUUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n\t}\r\n\r\n\tstatic initialize() {\r\n\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\tUUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nUUID.initialize();\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}