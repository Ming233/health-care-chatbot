{"ast":null,"code":"var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;else createNonEnumerableProperty(O, key, value);\n  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});","map":{"version":3,"names":["global","require","createNonEnumerableProperty","has","setGlobal","inspectSource","InternalStateModule","getInternalState","get","enforceInternalState","enforce","TEMPLATE","String","split","module","exports","O","key","value","options","unsafe","simple","enumerable","noTargetGet","source","join","Function","prototype","toString"],"sources":["C:/Projects/health-care-chatbot/node_modules/core-js/internals/redefine.js"],"sourcesContent":["var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC3C,IAAIC,2BAA2B,GAAGD,OAAO,CAAC,6CAA6C,CAAC;AACxF,IAAIE,GAAG,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAClD,IAAII,aAAa,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AAC1D,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,6BAA6B,CAAC;AAEhE,IAAIM,gBAAgB,GAAGD,mBAAmB,CAACE,GAAG;AAC9C,IAAIC,oBAAoB,GAAGH,mBAAmB,CAACI,OAAO;AACtD,IAAIC,QAAQ,GAAGC,MAAM,CAACA,MAAM,CAAC,CAACC,KAAK,CAAC,QAAQ,CAAC;AAE7C,CAACC,MAAM,CAACC,OAAO,GAAG,UAAUC,CAAC,EAAEC,GAAG,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAClD,IAAIC,MAAM,GAAGD,OAAO,GAAG,CAAC,CAACA,OAAO,CAACC,MAAM,GAAG,KAAK;EAC/C,IAAIC,MAAM,GAAGF,OAAO,GAAG,CAAC,CAACA,OAAO,CAACG,UAAU,GAAG,KAAK;EACnD,IAAIC,WAAW,GAAGJ,OAAO,GAAG,CAAC,CAACA,OAAO,CAACI,WAAW,GAAG,KAAK;EACzD,IAAI,OAAOL,KAAK,IAAI,UAAU,EAAE;IAC9B,IAAI,OAAOD,GAAG,IAAI,QAAQ,IAAI,CAACd,GAAG,CAACe,KAAK,EAAE,MAAM,CAAC,EAAEhB,2BAA2B,CAACgB,KAAK,EAAE,MAAM,EAAED,GAAG,CAAC;IAClGR,oBAAoB,CAACS,KAAK,CAAC,CAACM,MAAM,GAAGb,QAAQ,CAACc,IAAI,CAAC,OAAOR,GAAG,IAAI,QAAQ,GAAGA,GAAG,GAAG,EAAE,CAAC;EACvF;EACA,IAAID,CAAC,KAAKhB,MAAM,EAAE;IAChB,IAAIqB,MAAM,EAAEL,CAAC,CAACC,GAAG,CAAC,GAAGC,KAAK,CAAC,KACtBd,SAAS,CAACa,GAAG,EAAEC,KAAK,CAAC;IAC1B;EACF,CAAC,MAAM,IAAI,CAACE,MAAM,EAAE;IAClB,OAAOJ,CAAC,CAACC,GAAG,CAAC;EACf,CAAC,MAAM,IAAI,CAACM,WAAW,IAAIP,CAAC,CAACC,GAAG,CAAC,EAAE;IACjCI,MAAM,GAAG,IAAI;EACf;EACA,IAAIA,MAAM,EAAEL,CAAC,CAACC,GAAG,CAAC,GAAGC,KAAK,CAAC,KACtBhB,2BAA2B,CAACc,CAAC,EAAEC,GAAG,EAAEC,KAAK,CAAC;EACjD;AACA,CAAC,EAAEQ,QAAQ,CAACC,SAAS,EAAE,UAAU,EAAE,SAASC,QAAQ,GAAG;EACrD,OAAO,OAAO,IAAI,IAAI,UAAU,IAAIrB,gBAAgB,CAAC,IAAI,CAAC,CAACiB,MAAM,IAAInB,aAAa,CAAC,IAAI,CAAC;AAC1F,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}