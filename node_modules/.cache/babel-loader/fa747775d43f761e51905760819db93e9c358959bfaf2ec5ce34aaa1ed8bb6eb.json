{"ast":null,"code":"import { isAuthor } from './utils';\nvar last = function (arr) {\n  return arr[arr.length - 1];\n};\nvar dateChanged = function (curr, prev) {\n  return curr && prev && (prev.getDate() !== curr.getDate() || prev.getMonth() !== curr.getMonth() || prev.getFullYear() !== curr.getFullYear());\n};\nvar addDateMarker = function (acc, msg) {\n  var timestamp = msg.timestamp;\n  var lastItem = last(acc);\n  if (!timestamp) {\n    return;\n  }\n  if (!lastItem || dateChanged(timestamp, lastItem.timestamp)) {\n    var dateMarker = {\n      type: 'date-marker',\n      timestamp: timestamp,\n      trackBy: timestamp.getTime()\n    };\n    acc.push(dateMarker);\n  }\n};\nvar groupMessages = function (acc, msg, isLastMessage) {\n  var lastItem = last(acc);\n  var messages = undefined;\n  if (msg.typing && !isLastMessage) {\n    return;\n  }\n  if (lastItem && lastItem.type === 'message-group') {\n    messages = lastItem.messages;\n  }\n  if (messages && isAuthor(msg.author, last(messages))) {\n    messages.push(msg);\n  } else {\n    acc.push({\n      type: 'message-group',\n      messages: [msg],\n      author: msg.author,\n      timestamp: msg.timestamp,\n      trackBy: msg\n    });\n  }\n};\nvar groupItems = function (total) {\n  return function (acc, msg, index) {\n    var isLastMessage = index === total - 1;\n    addDateMarker(acc, msg);\n    groupMessages(acc, msg, isLastMessage);\n    if (msg.attachments && msg.attachments.length > 1) {\n      acc.push({\n        type: 'attachment-group',\n        attachments: msg.attachments,\n        attachmentLayout: msg.attachmentLayout,\n        timestamp: msg.timestamp,\n        trackBy: msg\n      });\n    }\n    if (msg.suggestedActions && isLastMessage) {\n      acc.push({\n        type: 'action-group',\n        actions: msg.suggestedActions,\n        timestamp: msg.timestamp,\n        trackBy: msg\n      });\n    }\n    return acc;\n  };\n};\nfunction assignSelectionIndices(viewItems) {\n  var selectionCounter = 0;\n  viewItems.forEach(function (viewItem) {\n    if (viewItem.type === 'message-group') {\n      viewItem.messages.forEach(function (msg) {\n        msg.selectionIndex = selectionCounter++;\n      });\n    } else if (viewItem.type === 'attachment-group' || viewItem.type === 'action-group') {\n      viewItem.selectionIndex = selectionCounter++;\n    }\n  });\n  viewItems.lastSelectionIndex = selectionCounter - 1;\n}\n/**\n * @hidden\n */\nexport var convertMsgsToViewItems = function (messages) {\n  var items = messages.slice();\n  var result = items.reduce(groupItems(messages.length), []);\n  assignSelectionIndices(result);\n  return result;\n};","map":{"version":3,"names":["isAuthor","last","arr","length","dateChanged","curr","prev","getDate","getMonth","getFullYear","addDateMarker","acc","msg","timestamp","lastItem","dateMarker","type","trackBy","getTime","push","groupMessages","isLastMessage","messages","undefined","typing","author","groupItems","total","index","attachments","attachmentLayout","suggestedActions","actions","assignSelectionIndices","viewItems","selectionCounter","forEach","viewItem","selectionIndex","lastSelectionIndex","convertMsgsToViewItems","items","slice","result","reduce"],"sources":["C:/Projects/health-care-chatbot/node_modules/@progress/kendo-react-conversational-ui/dist/es/ViewItem.js"],"sourcesContent":["import { isAuthor } from './utils';\nvar last = function (arr) { return arr[arr.length - 1]; };\nvar dateChanged = function (curr, prev) {\n    return (curr && prev) && (prev.getDate() !== curr.getDate() ||\n        prev.getMonth() !== curr.getMonth() ||\n        prev.getFullYear() !== curr.getFullYear());\n};\nvar addDateMarker = function (acc, msg) {\n    var timestamp = msg.timestamp;\n    var lastItem = last(acc);\n    if (!timestamp) {\n        return;\n    }\n    if (!lastItem || dateChanged(timestamp, lastItem.timestamp)) {\n        var dateMarker = {\n            type: 'date-marker',\n            timestamp: timestamp,\n            trackBy: timestamp.getTime()\n        };\n        acc.push(dateMarker);\n    }\n};\nvar groupMessages = function (acc, msg, isLastMessage) {\n    var lastItem = last(acc);\n    var messages = undefined;\n    if (msg.typing && !isLastMessage) {\n        return;\n    }\n    if (lastItem && lastItem.type === 'message-group') {\n        messages = lastItem.messages;\n    }\n    if (messages && isAuthor(msg.author, last(messages))) {\n        messages.push(msg);\n    }\n    else {\n        acc.push({\n            type: 'message-group',\n            messages: [msg],\n            author: msg.author,\n            timestamp: msg.timestamp,\n            trackBy: msg\n        });\n    }\n};\nvar groupItems = function (total) { return function (acc, msg, index) {\n    var isLastMessage = index === total - 1;\n    addDateMarker(acc, msg);\n    groupMessages(acc, msg, isLastMessage);\n    if (msg.attachments && msg.attachments.length > 1) {\n        acc.push({\n            type: 'attachment-group',\n            attachments: msg.attachments,\n            attachmentLayout: msg.attachmentLayout,\n            timestamp: msg.timestamp,\n            trackBy: msg\n        });\n    }\n    if (msg.suggestedActions && isLastMessage) {\n        acc.push({\n            type: 'action-group',\n            actions: msg.suggestedActions,\n            timestamp: msg.timestamp,\n            trackBy: msg\n        });\n    }\n    return acc;\n}; };\nfunction assignSelectionIndices(viewItems) {\n    var selectionCounter = 0;\n    viewItems.forEach(function (viewItem) {\n        if (viewItem.type === 'message-group') {\n            viewItem.messages.forEach(function (msg) {\n                msg.selectionIndex = selectionCounter++;\n            });\n        }\n        else if (viewItem.type === 'attachment-group' || viewItem.type === 'action-group') {\n            viewItem.selectionIndex = selectionCounter++;\n        }\n    });\n    viewItems.lastSelectionIndex = selectionCounter - 1;\n}\n/**\n * @hidden\n */\nexport var convertMsgsToViewItems = function (messages) {\n    var items = messages.slice();\n    var result = items.reduce(groupItems(messages.length), []);\n    assignSelectionIndices(result);\n    return result;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}